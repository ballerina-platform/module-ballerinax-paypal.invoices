{
  "openapi": "3.0.3",
  "info": {
    "title": "Invoices",
    "description": "Use the Invoicing API to create, send, and manage invoices. You can also use the API or webhooks to track invoice payments. When you send an invoice to a customer, the invoice moves from draft to payable state. PayPal then emails the customer a link to the invoice on the PayPal website. Customers with a PayPal account can log in and pay the invoice with PayPal. Alternatively, customers can pay as a guest with a debit card or credit card. For more information, see the <a href=\"/docs/invoicing/\">Invoicing Overview</a> and the <a href=\"/docs/invoicing/basic-integration/\">Invoicing Integration Guide</a>.",
    "contact": {},
    "version": "2.3"
  },
  "externalDocs": {
    "url": "https://developer.paypal.com/docs/api/invoicing/v2/"
  },
  "servers": [
    {
      "url": "https://api-m.sandbox.paypal.com/v2/invoicing",
      "description": "PayPal Sandbox Environment"
    },
    {
      "url": "https://api-m.paypal.com/v2/invoicing",
      "description": "PayPal Live Environment"
    }
  ],
  "tags": [
    {
      "name": "invoices",
      "description": "Use the `/invoices` resource to create, update, and send invoices and invoice reminders. To manage invoices, you can also list invoices, show details for invoices, delete draft invoices, and cancel sent invoices. You can also record payments for invoices to mark them as fully or partially paid, or record refunds for invoices to mark them as fully or partially refunded. You can create QR codes for invoices that can be scanned, viewed, and paid by a mobile phone."
    },
    {
      "name": "search-invoices",
      "description": "Use the `/search-invoices` resource to search for and list invoices that match search criteria."
    },
    {
      "name": "templates",
      "description": "Use the `/templates` resource to create, list, show details for, update, and delete invoice templates. Use the `/templates` resource when you create a third-party invoicing application. For instance, a business can create a template with predefined invoice data. Later, the business can select the template to populate the invoice data.<blockquote><strong>Note:</strong> To upload a logo to display on an invoice, you can use the <strong>Template Settings</strong> dashboard to <a href=\"https://www.paypal.com/invoice/settings/templates\">create a template</a>. When you create an invoice, you can use the URI for that logo.</blockquote>"
    },
    {
      "name": "merchant-config",
      "description": "Use the `/merchant-config` resource to create, update and show details of merchant configuration."
    }
  ],
  "paths": {
    "/invoices": {
      "get": {
        "tags": [
          "invoices"
        ],
        "summary": "List invoices",
        "description": "Lists invoices. To filter the invoices that appear in the response, you can specify one or more optional query parameters.",
        "operationId": "invoices.list",
        "parameters": [
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/page_size"
          },
          {
            "$ref": "#/components/parameters/total_required"
          },
          {
            "$ref": "#/components/parameters/fields"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful request returns the HTTP `200 OK` status code and a JSON response body that lists invoices with details",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Invoices"
                }
              },
              "multipart/mixed": {
                "schema": {
                  "$ref": "#/components/schemas/Invoices"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InlineResponse400"
                }
              },
              "multipart/mixed": {
                "schema": {
                  "$ref": "#/components/schemas/InlineResponse400"
                }
              }
            }
          },
          "403": {
            "description": "Authorization Error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error403"
                }
              },
              "multipart/mixed": {
                "schema": {
                  "$ref": "#/components/schemas/Error403"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/default"
          }
        },
        "security": [
          {
            "Oauth2": [
              "https://uri.paypal.com/services/invoicing/invoices/read"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "invoices"
        ],
        "summary": "Create draft invoice",
        "description": "Creates a draft invoice. To move the invoice from a draft to payable state, you must <a href=\"#invoices_send\">send the invoice</a>.<br/><br/>In the JSON request body, include invoice details including merchant information. The <code>invoice</code> object must include an <code>items</code> array.<blockquote><strong>Note:</strong> The merchant that you specify in an invoice must have a PayPal account in good standing.</blockquote>.",
        "operationId": "invoices.create",
        "parameters": [
          {
            "$ref": "#/components/parameters/prefer"
          }
        ],
        "requestBody": {
          "description": "The invoice details which includes all information of the invoice like items, billing information",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Invoice"
              },
              "examples": {
                "0": {
                  "$ref": "#/components/examples/invoice_draft"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "A successful request returns the HTTP `201 Created` status code. A JSON response body that shows invoice details is returned if you set <code>prefer=return=representation</code>",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Invoice"
                },
                "examples": {
                  "0": {
                    "$ref": "#/components/examples/invoice"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "$ref": "#/components/schemas/Invoice"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InlineResponse4001"
                }
              },
              "multipart/mixed": {
                "schema": {
                  "$ref": "#/components/schemas/InlineResponse4001"
                }
              }
            }
          },
          "403": {
            "description": "Authorization Error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error403"
                }
              },
              "multipart/mixed": {
                "schema": {
                  "$ref": "#/components/schemas/Error403"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InlineResponse422"
                }
              },
              "multipart/mixed": {
                "schema": {
                  "$ref": "#/components/schemas/InlineResponse422"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/default"
          }
        },
        "security": [
          {
            "Oauth2": [
              "https://uri.paypal.com/services/invoicing/invoices/readwrite"
            ]
          }
        ]
      }
    },
    "/invoices/{invoiceId}/send": {
      "post": {
        "tags": [
          "invoices"
        ],
        "summary": "Send invoice",
        "description": "Sends or schedules an invoice, by ID, to be sent to a customer. The action depends on the invoice issue date:<ul><li>If the invoice issue date is current or in the past, sends the invoice immediately.</li><li>If the invoice issue date is in the future, schedules the invoice to be sent on that date.</li></ul>To suppress the merchant's email notification, set the `send_to_invoicer` body parameter to `false`. To send the invoice through a share link and not through PayPal, set the <code>send_to_recipient</code> parameter to <code>false</code> in the <code>notification</code> object. The <code>send_to_recipient</code> parameter does not apply to a future issue date because the invoice is scheduled to be sent through PayPal on that date.<blockquote><strong>Notes:</strong><ul><li>After you send an invoice, resending it has no effect.</li><li>To send a notification for updates, <a href=\"#invoices_update\">update the invoice</a> and set the <code>send_to_recipient</code> body parameter to <code>true</code>.</li></ul></blockquote>",
        "operationId": "invoices.send",
        "parameters": [
          {
            "$ref": "#/components/parameters/invoice_id"
          }
        ],
        "requestBody": {
          "description": "The email or SMS notification to send to the payer when they send an invoice.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Notification"
              },
              "examples": {
                "0": {
                  "$ref": "#/components/examples/notification_invoice"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "A successful request returns the HTTP `200 OK` when the invoice issue date is current date",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LinkDescription"
                }
              },
              "multipart/mixed": {
                "schema": {
                  "$ref": "#/components/schemas/LinkDescription"
                }
              }
            }
          },
          "202": {
            "description": "A successful request returns the HTTP `202 Accepted` status code with no JSON response body, when the invoice issue date is in future.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/202Response"
                }
              },
              "multipart/mixed": {
                "schema": {
                  "$ref": "#/components/schemas/202Response"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error400"
                }
              },
              "multipart/mixed": {
                "schema": {
                  "$ref": "#/components/schemas/Error400"
                }
              }
            }
          },
          "403": {
            "description": "Authorization Error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error403"
                }
              },
              "multipart/mixed": {
                "schema": {
                  "$ref": "#/components/schemas/Error403"
                }
              }
            }
          },
          "404": {
            "description": "Resource Not Found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error404"
                }
              },
              "multipart/mixed": {
                "schema": {
                  "$ref": "#/components/schemas/Error404"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error422"
                }
              },
              "multipart/mixed": {
                "schema": {
                  "$ref": "#/components/schemas/Error422"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/default"
          }
        },
        "security": [
          {
            "Oauth2": [
              "https://uri.paypal.com/services/invoicing/invoices/readwrite"
            ]
          }
        ]
      }
    },
    "/invoices/{invoiceId}/remind": {
      "post": {
        "tags": [
          "invoices"
        ],
        "summary": "Send invoice reminder",
        "description": "Sends a reminder to the payer about an invoice, by ID. In the JSON request body, include a `notification` object that defines the subject of the reminder and other details.",
        "operationId": "invoices.remind",
        "parameters": [
          {
            "$ref": "#/components/parameters/invoice_id"
          }
        ],
        "requestBody": {
          "description": "The email or SMS notification that will be sent to the payer for reminder",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Notification"
              },
              "examples": {
                "0": {
                  "$ref": "#/components/examples/notification_reminder"
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "A successful request returns the HTTP `204 No Content` status code with no JSON response body"
          },
          "400": {
            "description": "Invalid request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InlineResponse4002"
                }
              },
              "multipart/mixed": {
                "schema": {
                  "$ref": "#/components/schemas/InlineResponse4002"
                }
              }
            }
          },
          "403": {
            "description": "Authorization Error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InlineResponse403"
                }
              },
              "multipart/mixed": {
                "schema": {
                  "$ref": "#/components/schemas/InlineResponse403"
                }
              }
            }
          },
          "404": {
            "description": "Resource Not Found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error404"
                }
              },
              "multipart/mixed": {
                "schema": {
                  "$ref": "#/components/schemas/Error404"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InlineResponse4221"
                }
              },
              "multipart/mixed": {
                "schema": {
                  "$ref": "#/components/schemas/InlineResponse4221"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/default"
          }
        },
        "security": [
          {
            "Oauth2": [
              "https://uri.paypal.com/services/invoicing/invoices/readwrite"
            ]
          }
        ]
      }
    },
    "/invoices/{invoiceId}/cancel": {
      "post": {
        "tags": [
          "invoices"
        ],
        "summary": "Cancel sent invoice",
        "description": "Cancels a sent invoice, by ID, and, optionally, sends a notification about the cancellation to the payer, merchant, and CC: emails.",
        "operationId": "invoices.cancel",
        "parameters": [
          {
            "$ref": "#/components/parameters/invoice_id"
          }
        ],
        "requestBody": {
          "description": "The email or SMS notification that will be sent to the payer on cancellation",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Notification"
              },
              "examples": {
                "0": {
                  "$ref": "#/components/examples/notification_invoice_cancel"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "A successful request returns the HTTP `204 No Content` status code with no JSON response body"
          },
          "400": {
            "description": "Invalid request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InlineResponse4003"
                }
              }
            }
          },
          "403": {
            "description": "Authorization Error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InlineResponse403"
                }
              }
            }
          },
          "404": {
            "description": "Resource Not Found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error404"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InlineResponse4222"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/default"
          }
        },
        "security": [
          {
            "Oauth2": [
              "https://uri.paypal.com/services/invoicing/invoices/readwrite"
            ]
          }
        ]
      }
    },
    "/invoices/{invoiceId}/payments": {
      "post": {
        "tags": [
          "invoices"
        ],
        "summary": "Record payment for invoice",
        "description": "Records a payment for the invoice. If no payment is due, the invoice is marked as `PAID`. Otherwise, the invoice is marked as `PARTIALLY PAID`.",
        "operationId": "invoices.payments",
        "parameters": [
          {
            "$ref": "#/components/parameters/invoice_id"
          }
        ],
        "requestBody": {
          "description": "The details of the payment to record against the invoice",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentDetail"
              },
              "examples": {
                "0": {
                  "$ref": "#/components/examples/payment_detail"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "A successful request returns the HTTP `200 Created` status code and a reference to the recorded payment",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentReference"
                }
              },
              "multipart/mixed": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentReference"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InlineResponse4004"
                }
              },
              "multipart/mixed": {
                "schema": {
                  "$ref": "#/components/schemas/InlineResponse4004"
                }
              }
            }
          },
          "403": {
            "description": "Authorization Error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InlineResponse403"
                }
              },
              "multipart/mixed": {
                "schema": {
                  "$ref": "#/components/schemas/InlineResponse403"
                }
              }
            }
          },
          "404": {
            "description": "Resource Not Found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error404"
                }
              },
              "multipart/mixed": {
                "schema": {
                  "$ref": "#/components/schemas/Error404"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InlineResponse4223"
                }
              },
              "multipart/mixed": {
                "schema": {
                  "$ref": "#/components/schemas/InlineResponse4223"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/default"
          }
        },
        "security": [
          {
            "Oauth2": [
              "https://uri.paypal.com/services/invoicing/invoices/readwrite"
            ]
          }
        ]
      }
    },
    "/invoices/{invoiceId}/payments/{transactionId}": {
      "delete": {
        "tags": [
          "invoices"
        ],
        "summary": "Delete external payment",
        "description": "Deletes an external payment, by invoice ID and transaction ID.",
        "operationId": "invoices.payments-delete",
        "parameters": [
          {
            "$ref": "#/components/parameters/invoice_id"
          },
          {
            "$ref": "#/components/parameters/transaction_id"
          }
        ],
        "responses": {
          "204": {
            "description": "A successful request returns the HTTP `204 No Content` status code with no JSON response body"
          },
          "403": {
            "description": "Authorization Error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InlineResponse403"
                }
              }
            }
          },
          "404": {
            "description": "Resource Not Found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error404"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InlineResponse4224"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/default"
          }
        },
        "security": [
          {
            "Oauth2": [
              "https://uri.paypal.com/services/invoicing/invoices/readwrite"
            ]
          }
        ]
      }
    },
    "/invoices/{invoiceId}/refunds": {
      "post": {
        "tags": [
          "invoices"
        ],
        "summary": "Record refund for invoice",
        "description": "Records a refund for the invoice. If all payments are refunded, the invoice is marked as `REFUNDED`. Otherwise, the invoice is marked as `PARTIALLY REFUNDED`.",
        "operationId": "invoices.refunds",
        "parameters": [
          {
            "$ref": "#/components/parameters/invoice_id"
          }
        ],
        "requestBody": {
          "description": "The details of the refund to record against the invoice",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RefundDetail"
              },
              "examples": {
                "0": {
                  "$ref": "#/components/examples/refund_detail"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "A successful request returns the HTTP `200 Created` status code and a reference to the recorded refund",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RefundReference"
                }
              },
              "multipart/mixed": {
                "schema": {
                  "$ref": "#/components/schemas/RefundReference"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InlineResponse4005"
                }
              },
              "multipart/mixed": {
                "schema": {
                  "$ref": "#/components/schemas/InlineResponse4005"
                }
              }
            }
          },
          "403": {
            "description": "Authorization Error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InlineResponse403"
                }
              },
              "multipart/mixed": {
                "schema": {
                  "$ref": "#/components/schemas/InlineResponse403"
                }
              }
            }
          },
          "404": {
            "description": "Resource Not Found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error404"
                }
              },
              "multipart/mixed": {
                "schema": {
                  "$ref": "#/components/schemas/Error404"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InlineResponse4225"
                }
              },
              "multipart/mixed": {
                "schema": {
                  "$ref": "#/components/schemas/InlineResponse4225"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/default"
          }
        },
        "security": [
          {
            "Oauth2": [
              "https://uri.paypal.com/services/invoicing/invoices/readwrite"
            ]
          }
        ]
      }
    },
    "/invoices/{invoiceId}/refunds/{transactionId}": {
      "delete": {
        "tags": [
          "invoices"
        ],
        "summary": "Delete external refund",
        "description": "Deletes an external refund, by invoice ID and transaction ID.",
        "operationId": "invoices.refunds-delete",
        "parameters": [
          {
            "$ref": "#/components/parameters/invoice_id"
          },
          {
            "$ref": "#/components/parameters/transaction_id"
          }
        ],
        "responses": {
          "204": {
            "description": "A successful request returns the HTTP `204 No Content` status code with no JSON response body"
          },
          "403": {
            "description": "Authorization Error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InlineResponse403"
                }
              },
              "multipart/mixed": {
                "schema": {
                  "$ref": "#/components/schemas/InlineResponse403"
                }
              }
            }
          },
          "404": {
            "description": "Resource Not Found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error404"
                }
              },
              "multipart/mixed": {
                "schema": {
                  "$ref": "#/components/schemas/Error404"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/default"
          }
        },
        "security": [
          {
            "Oauth2": [
              "https://uri.paypal.com/services/invoicing/invoices/readwrite"
            ]
          }
        ]
      }
    },
    "/invoices/{invoiceId}/generate-qr-code": {
      "post": {
        "tags": [
          "invoices"
        ],
        "summary": "Generate QR code",
        "description": "Generates a QR code for an invoice, by ID. The QR code is a PNG image in <a href=\"https://www.base64encode.org/\">Base64-encoded</a> format that corresponds to the invoice ID. You can generate a QR code for an invoice and add it to a paper or PDF invoice. When customers use their mobile devices to scan the QR code, they are redirected to the PayPal mobile payment flow where they can view the invoice and pay online with PayPal or a credit card. Before you get a QR code, you must <a href=\"#invoices_create\">create an invoice</a> and <a href=\"#invoices_send\">send an invoice</a> to move the invoice from a draft to payable state. Do not include an email address if you do not want the invoice emailed.",
        "operationId": "invoices.generate-qr-code",
        "parameters": [
          {
            "$ref": "#/components/parameters/invoice_id"
          }
        ],
        "requestBody": {
          "description": "Optional configuration parameters to adjust QR code width, height and the encoded URL",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/QrConfig"
              },
              "examples": {
                "0": {
                  "$ref": "#/components/examples/qr_config"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "A successful request returns the HTTP `200 OK` status code and a JSON response body that shows the QR code as a PNG image"
          },
          "400": {
            "description": "Invalid request.",
            "content": {
              "multipart/mixed": {
                "schema": {
                  "$ref": "#/components/schemas/InlineResponse4006"
                }
              }
            }
          },
          "403": {
            "description": "Authorization Error.",
            "content": {
              "multipart/mixed": {
                "schema": {
                  "$ref": "#/components/schemas/InlineResponse403"
                }
              }
            }
          },
          "404": {
            "description": "Resource Not Found.",
            "content": {
              "multipart/mixed": {
                "schema": {
                  "$ref": "#/components/schemas/Error404"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/default"
          }
        },
        "security": [
          {
            "Oauth2": [
              "https://uri.paypal.com/services/invoicing/invoices/readwrite"
            ]
          }
        ]
      }
    },
    "/generate-next-invoice-number": {
      "post": {
        "tags": [
          "invoices"
        ],
        "summary": "Generate invoice number",
        "description": "Generates the next invoice number that is available to the merchant. The next invoice number uses the prefix and suffix from the last invoice number and increments the number by one. For example, the next invoice number after `INVOICE-1234` is `INVOICE-1235`.",
        "operationId": "invoicing.generate-next-invoice-number",
        "parameters": [
          {
            "$ref": "#/components/parameters/content-type"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful request returns the HTTP `200 OK` status code and a JSON response body that shows the next invoice number",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvoiceNumber"
                }
              }
            }
          },
          "403": {
            "description": "Authorization Error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error403"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/default"
          }
        },
        "security": [
          {
            "Oauth2": [
              "https://uri.paypal.com/services/invoicing/invoices/readwrite"
            ]
          }
        ]
      }
    },
    "/invoices/{invoiceId}": {
      "get": {
        "tags": [
          "invoices"
        ],
        "summary": "Show invoice details",
        "description": "Shows details for an invoice, by ID.",
        "operationId": "invoices.get",
        "parameters": [
          {
            "$ref": "#/components/parameters/invoice_id"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful request returns the HTTP `200 OK` status code and a JSON response body that shows invoice details",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Invoice"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error400"
                }
              }
            }
          },
          "403": {
            "description": "Authorization Error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InlineResponse403"
                }
              }
            }
          },
          "404": {
            "description": "Resource Not Found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error404"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error422"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/default"
          }
        },
        "security": [
          {
            "Oauth2": [
              "https://uri.paypal.com/services/invoicing/invoices/read"
            ]
          }
        ]
      },
      "put": {
        "tags": [
          "invoices"
        ],
        "summary": "Fully update invoice",
        "description": "Fully updates an invoice, by ID. In the JSON request body, include a complete `invoice` object. This call does not support partial updates.",
        "operationId": "invoices.update",
        "parameters": [
          {
            "$ref": "#/components/parameters/invoice_id"
          },
          {
            "$ref": "#/components/parameters/send_to_recipient"
          },
          {
            "$ref": "#/components/parameters/send_to_invoicer"
          },
          {
            "$ref": "#/components/parameters/prefer"
          }
        ],
        "requestBody": {
          "description": "A representation of changes to make in the invoice",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Invoice"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "A successful request returns the HTTP `200 OK` status code. A JSON response body that shows invoice details is returned if you set <code>prefer=return=representation</code>",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Invoice"
                }
              },
              "multipart/mixed": {
                "schema": {
                  "$ref": "#/components/schemas/Invoice"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InlineResponse4007"
                }
              },
              "multipart/mixed": {
                "schema": {
                  "$ref": "#/components/schemas/InlineResponse4007"
                }
              }
            }
          },
          "403": {
            "description": "Authorization Error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InlineResponse403"
                }
              },
              "multipart/mixed": {
                "schema": {
                  "$ref": "#/components/schemas/InlineResponse403"
                }
              }
            }
          },
          "404": {
            "description": "Resource Not Found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error404"
                }
              },
              "multipart/mixed": {
                "schema": {
                  "$ref": "#/components/schemas/Error404"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InlineResponse422"
                }
              },
              "multipart/mixed": {
                "schema": {
                  "$ref": "#/components/schemas/InlineResponse422"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/default"
          }
        },
        "security": [
          {
            "Oauth2": [
              "https://uri.paypal.com/services/invoicing/invoices/readwrite"
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "invoices"
        ],
        "summary": "Delete invoice",
        "description": "Deletes a draft or scheduled invoice, by ID. Deletes invoices in the draft or scheduled state only. For invoices that have already been sent, you can <a href=\"/docs/api/invoicing/v2/#invoices_cancel\">cancel the invoice</a>. After you delete a draft or scheduled invoice, you can no longer use it or show its details. However, you can reuse its invoice number.",
        "operationId": "invoices.delete",
        "parameters": [
          {
            "$ref": "#/components/parameters/invoice_id"
          }
        ],
        "responses": {
          "204": {
            "description": "A successful request returns the HTTP `204 No Content` status code with no JSON response body"
          },
          "400": {
            "description": "Invalid request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error400"
                }
              }
            }
          },
          "403": {
            "description": "Authorization Error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InlineResponse403"
                }
              }
            }
          },
          "404": {
            "description": "Resource Not Found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error404"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/default"
          }
        },
        "security": [
          {
            "Oauth2": [
              "https://uri.paypal.com/services/invoicing/invoices/readwrite"
            ]
          }
        ]
      }
    },
    "/search-invoices": {
      "post": {
        "tags": [
          "search-invoices"
        ],
        "summary": "Search for invoices",
        "description": "Searches for and lists invoices that match search criteria. If you pass multiple criteria, the response lists invoices that match all criteria.",
        "operationId": "invoices.search-invoices",
        "parameters": [
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/page_size"
          },
          {
            "$ref": "#/components/parameters/total_required"
          }
        ],
        "requestBody": {
          "description": "The invoice search can be used to retrieve the invoices based on the search parameters",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SearchData"
              },
              "examples": {
                "0": {
                  "$ref": "#/components/examples/search_data"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "A successful request returns the HTTP `200 OK` status code and a JSON response body that lists the invoices that match the search criteria",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Invoices"
                }
              },
              "multipart/mixed": {
                "schema": {
                  "$ref": "#/components/schemas/Invoices"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InlineResponse4008"
                }
              },
              "multipart/mixed": {
                "schema": {
                  "$ref": "#/components/schemas/InlineResponse4008"
                }
              }
            }
          },
          "403": {
            "description": "Authorization Error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error403"
                }
              },
              "multipart/mixed": {
                "schema": {
                  "$ref": "#/components/schemas/Error403"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/default"
          }
        },
        "security": [
          {
            "Oauth2": [
              "https://uri.paypal.com/services/invoicing/invoices/read"
            ]
          }
        ]
      }
    },
    "/templates": {
      "get": {
        "tags": [
          "templates"
        ],
        "summary": "List templates",
        "description": "Lists merchant-created templates with associated details. The associated details include the emails, addresses, and phone numbers from the user's PayPal profile.<br/>The user can select which values to show in the business information section of their template.",
        "operationId": "templates.list",
        "parameters": [
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/page_size"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful request returns the HTTP `200 OK` status code and a JSON response body that lists invoices",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Templates"
                }
              },
              "multipart/mixed": {
                "schema": {
                  "$ref": "#/components/schemas/Templates"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InlineResponse400"
                }
              },
              "multipart/mixed": {
                "schema": {
                  "$ref": "#/components/schemas/InlineResponse400"
                }
              }
            }
          },
          "403": {
            "description": "Authorization Error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error403"
                }
              },
              "multipart/mixed": {
                "schema": {
                  "$ref": "#/components/schemas/Error403"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/default"
          }
        },
        "security": [
          {
            "Oauth2": [
              "https://uri.paypal.com/services/invoicing/invoices/read"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "templates"
        ],
        "summary": "Create template",
        "description": "Creates an invoice template. You can use details from this template to create an invoice. You can create up to 50 templates.<blockquote><strong>Note:</strong> Every merchant starts with three PayPal system templates that are optimized for the unit type billed. The template includes `Quantity`, `Hours`, and `Amount`.</blockquote>",
        "operationId": "templates.create",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Template"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "A successful request returns the HTTP `201 Created` status code. A JSON response body that shows template details is returned if you set <code>prefer=return=representation</code>",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Template"
                }
              },
              "multipart/mixed": {
                "schema": {
                  "$ref": "#/components/schemas/Template"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InlineResponse4009"
                }
              },
              "multipart/mixed": {
                "schema": {
                  "$ref": "#/components/schemas/InlineResponse4009"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InlineResponse4226"
                }
              },
              "multipart/mixed": {
                "schema": {
                  "$ref": "#/components/schemas/InlineResponse4226"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/default"
          }
        },
        "security": [
          {
            "Oauth2": [
              "https://uri.paypal.com/services/invoicing/invoices/readwrite"
            ]
          }
        ]
      }
    },
    "/templates/{templateId}": {
      "get": {
        "tags": [
          "templates"
        ],
        "summary": "Show template details",
        "description": "Shows details for a template, by ID.",
        "operationId": "templates.get",
        "parameters": [
          {
            "$ref": "#/components/parameters/template_id"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful request returns the HTTP `200 OK` status code and a JSON response body that shows template details",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Template"
                },
                "examples": {
                  "0": {
                    "$ref": "#/components/examples/template"
                  },
                  "1": {
                    "$ref": "#/components/examples/template_1"
                  }
                }
              },
              "multipart/mixed": {
                "schema": {
                  "$ref": "#/components/schemas/Template"
                }
              }
            }
          },
          "403": {
            "description": "Authorization Error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InlineResponse4031"
                }
              },
              "multipart/mixed": {
                "schema": {
                  "$ref": "#/components/schemas/InlineResponse4031"
                }
              }
            }
          },
          "404": {
            "description": "Resource Not Found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error404"
                }
              },
              "multipart/mixed": {
                "schema": {
                  "$ref": "#/components/schemas/Error404"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/default"
          }
        },
        "security": [
          {
            "Oauth2": [
              "https://uri.paypal.com/services/invoicing/invoices/read"
            ]
          }
        ]
      },
      "put": {
        "tags": [
          "templates"
        ],
        "summary": "Fully update template",
        "description": "Fully updates a template, by ID. In the JSON request body, include a complete `template` object. This call does not support partial updates.",
        "operationId": "templates.update",
        "parameters": [
          {
            "$ref": "#/components/parameters/template_id"
          }
        ],
        "requestBody": {
          "description": "A representation of changes to make in the template",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Template"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "A successful request returns the HTTP `200 OK` status code. A JSON response body that shows template details is returned if you set <code>prefer=return=representation</code>",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Template"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InlineResponse40010"
                }
              }
            }
          },
          "403": {
            "description": "Authorization Error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InlineResponse403"
                }
              }
            }
          },
          "404": {
            "description": "Resource Not Found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error404"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InlineResponse4227"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/default"
          }
        },
        "security": [
          {
            "Oauth2": [
              "https://uri.paypal.com/services/invoicing/invoices/readwrite"
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "templates"
        ],
        "summary": "Delete template",
        "description": "Deletes a template, by ID.",
        "operationId": "templates.delete",
        "parameters": [
          {
            "$ref": "#/components/parameters/template_id"
          }
        ],
        "responses": {
          "204": {
            "description": "A successful request returns the HTTP `204 No Content` status code with no JSON response body"
          },
          "400": {
            "description": "Invalid request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error400"
                }
              },
              "multipart/mixed": {
                "schema": {
                  "$ref": "#/components/schemas/Error400"
                }
              }
            }
          },
          "403": {
            "description": "Authorization Error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InlineResponse4032"
                }
              },
              "multipart/mixed": {
                "schema": {
                  "$ref": "#/components/schemas/InlineResponse4032"
                }
              }
            }
          },
          "404": {
            "description": "Resource Not Found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error404"
                }
              },
              "multipart/mixed": {
                "schema": {
                  "$ref": "#/components/schemas/Error404"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error422"
                }
              },
              "multipart/mixed": {
                "schema": {
                  "$ref": "#/components/schemas/Error422"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/default"
          }
        },
        "security": [
          {
            "Oauth2": [
              "https://uri.paypal.com/services/invoicing/invoices/readwrite"
            ]
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "InvoiceDetail": {
        "title": "Invoice Detail",
        "type": "object",
        "description": "The details of the invoice. Includes invoice number, date, payment terms, and audit metadata",
        "allOf": [
          {
            "$ref": "#/components/schemas/Detail"
          },
          {
            "$ref": "#/components/schemas/InvoiceDetailAllOf2"
          }
        ]
      },
      "Configuration": {
        "title": "Configuration",
        "type": "object",
        "description": "The invoice configuration details. Includes partial payment, tip, and tax calculated after discount",
        "allOf": [
          {
            "$ref": "#/components/schemas/TemplateConfiguration"
          },
          {
            "$ref": "#/components/schemas/ConfigurationAllOf2"
          }
        ]
      },
      "CurrencyCode": {
        "maxLength": 3,
        "minLength": 3,
        "type": "string",
        "description": "The [three-character ISO-4217 currency code](/docs/integration/direct/rest/currency-codes/) that identifies the currency",
        "format": "ppaas_common_currency_code_v2"
      },
      "Invoicespayments400Details": {
        "anyOf": [
          {
            "$ref": "#/components/schemas/MISSINGREQUIREDPARAMETER"
          },
          {
            "$ref": "#/components/schemas/INVALIDPAYMENTMETHOD"
          },
          {
            "$ref": "#/components/schemas/NOTSUPPORTED"
          },
          {
            "$ref": "#/components/schemas/INVALIDSTRINGLENGTH10"
          },
          {
            "$ref": "#/components/schemas/MISSINGREQUIREDPARAMETER1"
          },
          {
            "$ref": "#/components/schemas/INVALIDSTRINGMAXLENGTH27"
          },
          {
            "$ref": "#/components/schemas/INVALIDPARAMETERSYNTAX5"
          },
          {
            "$ref": "#/components/schemas/VALUECANNOTBEZERO"
          },
          {
            "$ref": "#/components/schemas/INVALIDDECIMALVALUE"
          },
          {
            "$ref": "#/components/schemas/INVALIDINTEGERVALUE"
          },
          {
            "$ref": "#/components/schemas/INVALIDPARAMETERSYNTAX6"
          }
        ]
      },
      "CANNOTPROCESSPAYMENTS": {
        "title": "CANNOT_PROCESS_PAYMENTS",
        "properties": {
          "issue": {
            "type": "string",
            "enum": [
              "CANNOT_PROCESS_PAYMENTS"
            ]
          },
          "description": {
            "type": "string",
            "enum": [
              "Current invoice state does not support payment processing."
            ]
          }
        }
      },
      "InvoicespaymentsDelete422Details": {
        "anyOf": [
          {
            "$ref": "#/components/schemas/CANNOTDELETEEXTERNALPAYMENT"
          }
        ]
      },
      "RefundDetail": {
        "title": "Refund Detail",
        "required": [
          "method"
        ],
        "type": "object",
        "properties": {
          "amount": {
            "$ref": "#/components/schemas/Money"
          },
          "method": {
            "$ref": "#/components/schemas/PaymentMethod"
          },
          "type": {
            "$ref": "#/components/schemas/PaymentType"
          },
          "refund_id": {
            "maxLength": 22,
            "type": "string",
            "description": "The ID for a PayPal payment transaction. Required for the `PAYPAL` payment type",
            "readOnly": true,
            "x-ballerina-name-ignore": "refundId"
          },
          "refund_date": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DateNoTime"
              }
            ],
            "x-ballerina-name-ignore": "refundDate"
          }
        },
        "description": "The refund details of the invoice. Includes the refund type, date, amount, and method"
      },
      "CANNOTPROCESSREFUNDS": {
        "title": "CANNOT_PROCESS_REFUNDS",
        "properties": {
          "issue": {
            "type": "string",
            "enum": [
              "CANNOT_PROCESS_REFUNDS"
            ]
          },
          "description": {
            "type": "string",
            "enum": [
              "Current invoice state does not support refunds."
            ]
          }
        }
      },
      "InvoicesGenerateQrCode400": {
        "properties": {
          "details": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InvoicesgenerateQrCode400Details"
            }
          }
        }
      },
      "CANNOTDELETEGLOBALTEMPLATE": {
        "title": "CANNOT_DELETE_GLOBAL_TEMPLATE",
        "properties": {
          "issue": {
            "type": "string",
            "enum": [
              "CANNOT_DELETE_GLOBAL_TEMPLATE"
            ]
          },
          "description": {
            "type": "string",
            "enum": [
              "Global templates cannot be deleted."
            ]
          }
        }
      },
      "InvoicesUpdate400": {
        "properties": {
          "details": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Invoicesupdate400Details"
            }
          }
        }
      },
      "PERMISSIONDENIED2": {
        "title": "PERMISSION_DENIED",
        "properties": {
          "issue": {
            "type": "string",
            "enum": [
              "PERMISSION_DENIED"
            ]
          },
          "description": {
            "type": "string",
            "enum": [
              "The requested template is not associated with the requested user."
            ]
          }
        }
      },
      "DateNoTime": {
        "maxLength": 10,
        "minLength": 10,
        "pattern": "^[0-9]{4}-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])$",
        "type": "string",
        "description": "The stand-alone date, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6). To represent special legal values, such as a date of birth, you should use dates with no associated time or time-zone data. Whenever possible, use the standard `date_time` type. This regular expression does not validate all dates. For example, February 31 is valid and nothing is known about leap years",
        "format": "ppaas_date_notime_v2"
      },
      "Refunds": {
        "title": "Refunds",
        "type": "object",
        "properties": {
          "refund_amount": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Money"
              }
            ],
            "x-ballerina-name-ignore": "refundAmount"
          },
          "transactions": {
            "maxItems": 100,
            "type": "array",
            "description": "An array of refund details for the invoice. Includes the refund type, date, amount, and method",
            "readOnly": true,
            "items": {
              "$ref": "#/components/schemas/RefundDetail"
            }
          }
        },
        "description": "The invoicing refund details. Includes the refund type, date, amount, and method"
      },
      "Invoicesrefunds422Details": {
        "anyOf": [
          {
            "$ref": "#/components/schemas/INVALIDREFUNDAMOUNT"
          },
          {
            "$ref": "#/components/schemas/CANNOTPROCESSREFUNDS"
          }
        ]
      },
      "Templatesdelete403Details": {
        "anyOf": [
          {
            "$ref": "#/components/schemas/PERMISSIONDENIED2"
          },
          {
            "$ref": "#/components/schemas/CANNOTDELETEGLOBALTEMPLATE"
          }
        ]
      },
      "PERMISSIONDENIED1": {
        "title": "PERMISSION_DENIED",
        "properties": {
          "issue": {
            "type": "string",
            "enum": [
              "PERMISSION_DENIED"
            ]
          },
          "description": {
            "type": "string",
            "enum": [
              "The requested template is not associated with the requested user."
            ]
          }
        }
      },
      "CANNOTCANCELREFUNDEDINVOICE": {
        "title": "CANNOT_CANCEL_REFUNDED_INVOICE",
        "properties": {
          "issue": {
            "type": "string",
            "enum": [
              "CANNOT_CANCEL_REFUNDED_INVOICE"
            ]
          },
          "description": {
            "type": "string",
            "enum": [
              "Cannot cancel a refunded or partially refunded invoice."
            ]
          }
        }
      },
      "PaymentReference": {
        "title": "Payment Reference",
        "type": "object",
        "properties": {
          "payment_id": {
            "type": "string",
            "description": "The ID for the invoice payment",
            "readOnly": true,
            "x-ballerina-name-ignore": "paymentId"
          }
        },
        "description": "The reference to the payment detail"
      },
      "INVALIDPAYMENTMETHOD": {
        "title": "INVALID_PAYMENT_METHOD",
        "properties": {
          "issue": {
            "type": "string",
            "enum": [
              "INVALID_PAYMENT_METHOD"
            ]
          },
          "description": {
            "type": "string",
            "enum": [
              "The value provided is not an acceptable method of payment."
            ]
          }
        }
      },
      "Metadata": {
        "title": "Metadata",
        "type": "object",
        "description": "The audit metadata. Captures all invoicing actions on create, send, update, and cancel",
        "allOf": [
          {
            "$ref": "#/components/schemas/TemplateMetadata"
          },
          {
            "$ref": "#/components/schemas/MetadataAllOf2"
          }
        ]
      },
      "CANNOTCANCELDRAFTINVOICE": {
        "title": "CANNOT_CANCEL_DRAFT_INVOICE",
        "properties": {
          "issue": {
            "type": "string",
            "enum": [
              "CANNOT_CANCEL_DRAFT_INVOICE"
            ]
          },
          "description": {
            "type": "string",
            "enum": [
              "Draft invoice cannot be canceled."
            ]
          }
        }
      },
      "InlineResponse400": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Error400"
          },
          {
            "$ref": "#/components/schemas/BadRequest"
          }
        ]
      },
      "ErrorDetails": {
        "title": "Error Details",
        "required": [
          "issue"
        ],
        "type": "object",
        "properties": {
          "field": {
            "type": "string",
            "description": "The field that caused the error. If this field is in the body, set this value to the field's JSON pointer value. Required for client-side errors"
          },
          "issue": {
            "type": "string",
            "description": "The unique, fine-grained application-level error code"
          },
          "description": {
            "type": "string",
            "description": "The human-readable description for an issue. The description can change over the lifetime of an API, so clients must not depend on this value"
          },
          "location": {
            "type": "string",
            "description": "The location of the field that caused the error. Value is `body`, `path`, or `query`",
            "default": "body"
          },
          "value": {
            "type": "string",
            "description": "The value of the field that caused the error"
          }
        },
        "description": "The error details. Required for client-side `4XX` errors"
      },
      "InlineResponse403": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Error403"
          },
          {
            "$ref": "#/components/schemas/ForbiddenError"
          }
        ]
      },
      "Notification": {
        "title": "Notification",
        "type": "object",
        "properties": {
          "note": {
            "maxLength": 4000,
            "type": "string",
            "description": "A note to the payer"
          },
          "send_to_recipient": {
            "type": "boolean",
            "description": "Indicates whether to send a copy of the email to the recipient",
            "default": true,
            "x-ballerina-name-ignore": "sendToRecipient"
          },
          "subject": {
            "maxLength": 4000,
            "type": "string",
            "description": "The subject of the email that is sent as a notification to the recipient"
          },
          "send_to_invoicer": {
            "type": "boolean",
            "description": "Indicates whether to send a copy of the email to the merchant",
            "default": false,
            "x-ballerina-name-ignore": "sendToInvoicer"
          },
          "additional_recipients": {
            "maxItems": 100,
            "type": "array",
            "description": "An array of one or more CC: emails to which notifications are sent. If you omit this parameter, a notification is sent to all CC: email addresses that are part of the invoice.<blockquote><strong>Note:</strong> Valid values are email addresses in the `additional_recipients` value associated with the invoice.</blockquote>",
            "items": {
              "$ref": "#/components/schemas/EmailAddress"
            },
            "x-ballerina-name-ignore": "additionalRecipients"
          }
        },
        "description": "The email or SMS notification to send to the invoicer or payer on sending an invoice"
      },
      "PhoneDetailAllOf2": {
        "properties": {
          "phone_type": {
            "$ref": "#/components/schemas/PhoneType"
          }
        }
      },
      "INVOICECANCELEDALREADY": {
        "title": "INVOICE_CANCELED_ALREADY",
        "properties": {
          "issue": {
            "type": "string",
            "enum": [
              "INVOICE_CANCELED_ALREADY"
            ]
          },
          "description": {
            "type": "string",
            "enum": [
              "Invoice is already cancelled."
            ]
          }
        }
      },
      "AddressDetails": {
        "title": "Address Details",
        "type": "object",
        "properties": {
          "building_name": {
            "maxLength": 100,
            "type": "string",
            "description": "A named locations that represents the premise. Usually a building name or number or collection of buildings with a common name or number. For example, <code>Craven House</code>",
            "x-ballerina-name-ignore": "buildingName"
          },
          "street_number": {
            "maxLength": 100,
            "type": "string",
            "description": "The street number",
            "x-ballerina-name-ignore": "streetNumber"
          },
          "street_type": {
            "maxLength": 100,
            "type": "string",
            "description": "The street type. For example, avenue, boulevard, road, or expressway",
            "x-ballerina-name-ignore": "streetType"
          },
          "sub_building": {
            "maxLength": 100,
            "type": "string",
            "description": "The first-order entity below a named building or location that represents the sub-premise. Usually a single building within a collection of buildings with a common name. Can be a flat, story, floor, room, or apartment",
            "x-ballerina-name-ignore": "subBuilding"
          },
          "delivery_service": {
            "maxLength": 100,
            "type": "string",
            "description": "The delivery service. Post office box, bag number, or post office name",
            "x-ballerina-name-ignore": "deliveryService"
          },
          "street_name": {
            "maxLength": 100,
            "type": "string",
            "description": "The street name. Just `Drury` in `Drury Lane`",
            "x-ballerina-name-ignore": "streetName"
          }
        },
        "description": "The non-portable additional address details that are sometimes needed for compliance, risk, or other scenarios where fine-grain address information might be needed. Not portable with common third party and open source. Redundant with core fields.<br/>For example, `address_portable.address_line_1` is usually a combination of `address_details.street_number`, `street_name`, and `street_type`"
      },
      "VALUECANNOTBEZERO": {
        "title": "VALUE_CANNOT_BE_ZERO",
        "properties": {
          "issue": {
            "type": "string",
            "enum": [
              "VALUE_CANNOT_BE_ZERO"
            ]
          },
          "description": {
            "type": "string",
            "enum": [
              "Payment amount cannot be zero. Please provide a valid amount."
            ]
          }
        }
      },
      "400Details": {
        "anyOf": [
          {
            "$ref": "#/components/schemas/INVALIDINTEGERMAXVALUE"
          },
          {
            "$ref": "#/components/schemas/INVALIDINTEGERMINVALUE"
          }
        ]
      },
      "TemplatesDelete403": {
        "properties": {
          "details": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Templatesdelete403Details"
            }
          }
        }
      },
      "Invoicescancel422Details": {
        "anyOf": [
          {
            "$ref": "#/components/schemas/CANNOTCANCELDRAFTINVOICE"
          },
          {
            "$ref": "#/components/schemas/CANNOTCANCELPAIDINVOICE"
          },
          {
            "$ref": "#/components/schemas/CANNOTCANCELREFUNDEDINVOICE"
          },
          {
            "$ref": "#/components/schemas/CANNOTCANCELSCHEDULEDINVOICE"
          },
          {
            "$ref": "#/components/schemas/INVOICECANCELEDALREADY"
          }
        ]
      },
      "InvoicesRefunds422": {
        "properties": {
          "details": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Invoicesrefunds422Details"
            }
          }
        }
      },
      "TemplateItemField": {
        "title": "Template Item Field",
        "type": "string",
        "description": "The field names for the invoice line items in the template",
        "enum": [
          "ITEMS_QUANTITY",
          "ITEMS_DESCRIPTION",
          "ITEMS_DATE",
          "ITEMS_DISCOUNT",
          "ITEMS_TAX"
        ]
      },
      "Invoicesremind422Details": {
        "anyOf": [
          {
            "$ref": "#/components/schemas/CANNOTREMINDINVOICE"
          }
        ]
      },
      "CANNOTDELETEEXTERNALPAYMENT": {
        "title": "CANNOT_DELETE_EXTERNAL_PAYMENT",
        "properties": {
          "issue": {
            "type": "string",
            "enum": [
              "CANNOT_DELETE_EXTERNAL_PAYMENT"
            ]
          },
          "description": {
            "type": "string",
            "enum": [
              "The external payment cannot be deleted as the recorded refund cannot exceed the recored payment for an invoice."
            ]
          }
        }
      },
      "Invoicesupdate400Details": {
        "anyOf": [
          {
            "$ref": "#/components/schemas/INVALIDSTRINGMAXLENGTH29"
          },
          {
            "$ref": "#/components/schemas/INVALIDSTRINGLENGTH12"
          },
          {
            "$ref": "#/components/schemas/INVALIDSTRINGMAXLENGTH30"
          },
          {
            "$ref": "#/components/schemas/INVALIDPARAMETERSYNTAX10"
          },
          {
            "$ref": "#/components/schemas/INVALIDSTRINGMAXLENGTH31"
          },
          {
            "$ref": "#/components/schemas/INVALIDSTRINGMAXLENGTH32"
          },
          {
            "$ref": "#/components/schemas/INVALIDSTRINGLENGTH13"
          },
          {
            "$ref": "#/components/schemas/INVALIDSTRINGMAXLENGTH33"
          },
          {
            "$ref": "#/components/schemas/INVALIDSTRINGLENGTH14"
          },
          {
            "$ref": "#/components/schemas/INVALIDSTRINGMAXLENGTH34"
          },
          {
            "$ref": "#/components/schemas/INVALIDSTRINGLENGTH15"
          },
          {
            "$ref": "#/components/schemas/INVALIDSTRINGLENGTH16"
          },
          {
            "$ref": "#/components/schemas/INVALIDSTRINGLENGTH17"
          },
          {
            "$ref": "#/components/schemas/INVALIDSTRINGMAXLENGTH35"
          },
          {
            "$ref": "#/components/schemas/INVALIDSTRINGMAXLENGTH36"
          },
          {
            "$ref": "#/components/schemas/INVALIDSTRINGLENGTH18"
          },
          {
            "$ref": "#/components/schemas/INVALIDSTRINGMAXLENGTH37"
          },
          {
            "$ref": "#/components/schemas/INVALIDSTRINGMAXLENGTH38"
          },
          {
            "$ref": "#/components/schemas/INVALIDSTRINGMAXLENGTH39"
          },
          {
            "$ref": "#/components/schemas/INVALIDSTRINGMAXLENGTH40"
          },
          {
            "$ref": "#/components/schemas/INVALIDPARAMETERSYNTAX11"
          },
          {
            "$ref": "#/components/schemas/INVALIDSTRINGMAXLENGTH41"
          },
          {
            "$ref": "#/components/schemas/INVALIDSTRINGMAXLENGTH42"
          },
          {
            "$ref": "#/components/schemas/INVALIDSTRINGLENGTH19"
          },
          {
            "$ref": "#/components/schemas/INVALIDSTRINGMAXLENGTH43"
          },
          {
            "$ref": "#/components/schemas/INVALIDSTRINGMAXLENGTH44"
          },
          {
            "$ref": "#/components/schemas/INVALIDSTRINGMAXLENGTH45"
          },
          {
            "$ref": "#/components/schemas/INVALIDSTRINGMAXLENGTH46"
          },
          {
            "$ref": "#/components/schemas/INVALIDPARAMETERSYNTAX12"
          },
          {
            "$ref": "#/components/schemas/INVALIDSTRINGMAXLENGTH47"
          },
          {
            "$ref": "#/components/schemas/INVALIDSTRINGLENGTH20"
          },
          {
            "$ref": "#/components/schemas/INVALIDSTRINGMAXLENGTH48"
          },
          {
            "$ref": "#/components/schemas/INVALIDSTRINGMAXLENGTH49"
          },
          {
            "$ref": "#/components/schemas/INVALIDSTRINGMAXLENGTH50"
          },
          {
            "$ref": "#/components/schemas/INVALIDPARAMETERSYNTAX13"
          },
          {
            "$ref": "#/components/schemas/INVALIDSTRINGLENGTH21"
          },
          {
            "$ref": "#/components/schemas/INVALIDSTRINGMAXLENGTH51"
          },
          {
            "$ref": "#/components/schemas/INVALIDPARAMETERSYNTAX14"
          },
          {
            "$ref": "#/components/schemas/INVALIDSTRINGMAXLENGTH52"
          },
          {
            "$ref": "#/components/schemas/INVALIDSTRINGMAXLENGTH53"
          }
        ]
      },
      "INVALIDREFUNDMETHOD": {
        "title": "INVALID_REFUND_METHOD",
        "properties": {
          "issue": {
            "type": "string",
            "enum": [
              "INVALID_REFUND_METHOD"
            ]
          },
          "description": {
            "type": "string",
            "enum": [
              "The value provided is not an acceptable method of refund."
            ]
          }
        }
      },
      "PartialPayment": {
        "title": "Partial Payment",
        "type": "object",
        "properties": {
          "minimum_amount_due": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Money"
              }
            ],
            "x-ballerina-name-ignore": "minimumAmountDue"
          },
          "allow_partial_payment": {
            "type": "boolean",
            "description": "Indicates whether the invoice allows a partial payment. If `false`, the invoice must be paid in full. If `true`, the invoice allows partial payments.<blockquote><strong>Note:</strong> This feature is not available for users in `India`, `Brazil`, or `Israel`.</blockquote>",
            "default": false,
            "x-ballerina-name-ignore": "allowPartialPayment"
          }
        },
        "description": "The partial payment details. Includes the minimum amount that the invoicer expects from the payer"
      },
      "INVALIDSTRINGMAXLENGTH": {
        "title": "INVALID_STRING_MAX_LENGTH",
        "properties": {
          "issue": {
            "type": "string",
            "enum": [
              "INVALID_STRING_MAX_LENGTH"
            ]
          },
          "description": {
            "type": "string",
            "enum": [
              "Address line2 length should be less than 300 characters."
            ]
          }
        }
      },
      "422Details": {
        "anyOf": [
          {
            "$ref": "#/components/schemas/USERNOTFOUND"
          }
        ]
      },
      "FileReference": {
        "title": "File Reference",
        "type": "object",
        "properties": {
          "content_type": {
            "type": "string",
            "description": "The [Internet Assigned Numbers Authority (IANA) media type of the file](https://www.iana.org/assignments/media-types/media-types.xhtml)",
            "x-ballerina-name-ignore": "contentType"
          },
          "create_time": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DateTime"
              }
            ],
            "x-ballerina-name-ignore": "createTime"
          },
          "size": {
            "pattern": "^[0-9]+$",
            "type": "string",
            "description": "The size of the file, in bytes"
          },
          "reference_url": {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "The reference URL for the file",
            "format": "uri",
            "x-ballerina-name-ignore": "referenceUrl"
          },
          "id": {
            "maxLength": 255,
            "minLength": 1,
            "type": "string",
            "description": "The ID of the referenced file"
          }
        },
        "description": "The file reference. Can be a file in PayPal MediaServ, PayPal DMS, or other custom store"
      },
      "TemplateDisplayPreference": {
        "title": "Template Display Preference",
        "type": "object",
        "properties": {
          "hidden": {
            "type": "boolean",
            "description": "Indicates whether to show or hide this field",
            "default": false
          }
        },
        "description": "The template display preference"
      },
      "CustomAmount": {
        "title": "Custom Amount",
        "required": [
          "label"
        ],
        "type": "object",
        "properties": {
          "amount": {
            "$ref": "#/components/schemas/Money"
          },
          "label": {
            "maxLength": 50,
            "type": "string",
            "description": "The label to the custom amount of the invoice"
          }
        },
        "description": "The custom amount to apply to an invoice. If you include a label, you must include a custom amount"
      },
      "Templates": {
        "title": "Templates",
        "minItems": 1,
        "type": "object",
        "properties": {
          "emails": {
            "$ref": "#/components/schemas/EmailAddress"
          },
          "addresses": {
            "type": "array",
            "description": "An array of addresses in the user's PayPal profile",
            "readOnly": true,
            "items": {
              "$ref": "#/components/schemas/AddressPortable"
            }
          },
          "templates": {
            "type": "array",
            "description": "An array of details for each template. If `fields` is `none`, returns only the template name, ID, and default status",
            "items": {
              "$ref": "#/components/schemas/Template"
            }
          },
          "phones": {
            "type": "array",
            "description": "An array of phone numbers in the user's PayPal profile",
            "items": {
              "$ref": "#/components/schemas/PhoneDetail"
            }
          },
          "links": {
            "type": "array",
            "description": "An array of request-related [HATEOAS links](/docs/api/reference/api-responses/#hateoas-links)",
            "readOnly": true,
            "items": {
              "$ref": "#/components/schemas/LinkDescription"
            }
          }
        },
        "description": "An array of merchant-created templates with associated details that include the emails, addresses, and phone numbers from the user's PayPal profile"
      },
      "INVALIDDECIMALVALUE": {
        "title": "INVALID_DECIMAL_VALUE",
        "properties": {
          "issue": {
            "type": "string",
            "enum": [
              "INVALID_DECIMAL_VALUE"
            ]
          },
          "description": {
            "type": "string",
            "enum": [
              "Payment amount value is invalid. Can have non-negative value with maximum 7 digits and upto 2 fractions."
            ]
          }
        }
      },
      "NOTSUPPORTED": {
        "title": "NOT_SUPPORTED",
        "properties": {
          "issue": {
            "type": "string",
            "enum": [
              "NOT_SUPPORTED"
            ]
          },
          "description": {
            "type": "string",
            "enum": [
              "Currency code is not supported."
            ]
          }
        }
      },
      "CANNOTCANCELDRAFTINVOICE1": {
        "title": "CANNOT_CANCEL_DRAFT_INVOICE",
        "properties": {
          "issue": {
            "type": "string",
            "enum": [
              "CANNOT_CANCEL_DRAFT_INVOICE"
            ]
          },
          "description": {
            "type": "string",
            "enum": [
              "Cannot cancel a draft invoice."
            ]
          }
        }
      },
      "TemplateDetailAllOf2": {
        "properties": {
          "payment_term": {
            "$ref": "#/components/schemas/PaymentTerm"
          },
          "metadata": {
            "$ref": "#/components/schemas/TemplateMetadata"
          }
        }
      },
      "CANNOTCANCELDRAFTINVOICE2": {
        "title": "CANNOT_CANCEL_DRAFT_INVOICE",
        "properties": {
          "issue": {
            "type": "string",
            "enum": [
              "CANNOT_CANCEL_DRAFT_INVOICE"
            ]
          },
          "description": {
            "type": "string",
            "enum": [
              "Cannot cancel a draft invoice."
            ]
          }
        }
      },
      "Name": {
        "title": "Name",
        "type": "object",
        "properties": {
          "full_name": {
            "maxLength": 300,
            "type": "string",
            "description": "When the party is a person, the party's full name",
            "x-ballerina-name-ignore": "fullName"
          },
          "prefix": {
            "maxLength": 140,
            "type": "string",
            "description": "The prefix, or title, to the party's name"
          },
          "surname": {
            "maxLength": 140,
            "type": "string",
            "description": "When the party is a person, the party's surname or family name. Also known as the last name. Required when the party is a person. Use also to store multiple surnames including the matronymic, or mother's, surname"
          },
          "given_name": {
            "maxLength": 140,
            "type": "string",
            "description": "When the party is a person, the party's given, or first, name",
            "x-ballerina-name-ignore": "givenName"
          },
          "middle_name": {
            "maxLength": 140,
            "type": "string",
            "description": "When the party is a person, the party's middle name. Use also to store multiple middle names including the patronymic, or father's, middle name",
            "x-ballerina-name-ignore": "middleName"
          },
          "suffix": {
            "maxLength": 140,
            "type": "string",
            "description": "The suffix for the party's name"
          },
          "alternate_full_name": {
            "maxLength": 300,
            "type": "string",
            "description": "DEPRECATED. The party's alternate name. Can be a business name, nickname, or any other name that cannot be split into first, last name. Required when the party is a business",
            "x-ballerina-name-ignore": "alternateFullName"
          }
        },
        "description": "The name of the party"
      },
      "Invoicescreate400Details": {
        "anyOf": [
          {
            "$ref": "#/components/schemas/INVALIDSTRINGMAXLENGTH"
          },
          {
            "$ref": "#/components/schemas/INVALIDSTRINGLENGTH"
          },
          {
            "$ref": "#/components/schemas/INVALIDSTRINGMAXLENGTH1"
          },
          {
            "$ref": "#/components/schemas/INVALIDPARAMETERSYNTAX"
          },
          {
            "$ref": "#/components/schemas/INVALIDSTRINGMAXLENGTH2"
          },
          {
            "$ref": "#/components/schemas/INVALIDSTRINGMAXLENGTH3"
          },
          {
            "$ref": "#/components/schemas/INVALIDSTRINGLENGTH1"
          },
          {
            "$ref": "#/components/schemas/INVALIDSTRINGMAXLENGTH4"
          },
          {
            "$ref": "#/components/schemas/INVALIDSTRINGLENGTH2"
          },
          {
            "$ref": "#/components/schemas/INVALIDSTRINGMAXLENGTH5"
          },
          {
            "$ref": "#/components/schemas/INVALIDSTRINGLENGTH3"
          },
          {
            "$ref": "#/components/schemas/INVALIDSTRINGLENGTH4"
          },
          {
            "$ref": "#/components/schemas/INVALIDSTRINGLENGTH5"
          },
          {
            "$ref": "#/components/schemas/INVALIDSTRINGMAXLENGTH6"
          },
          {
            "$ref": "#/components/schemas/INVALIDSTRINGMAXLENGTH7"
          },
          {
            "$ref": "#/components/schemas/INVALIDSTRINGLENGTH6"
          },
          {
            "$ref": "#/components/schemas/INVALIDSTRINGMAXLENGTH8"
          },
          {
            "$ref": "#/components/schemas/INVALIDSTRINGMAXLENGTH9"
          },
          {
            "$ref": "#/components/schemas/INVALIDSTRINGMAXLENGTH10"
          },
          {
            "$ref": "#/components/schemas/INVALIDSTRINGMAXLENGTH11"
          },
          {
            "$ref": "#/components/schemas/INVALIDPARAMETERSYNTAX1"
          },
          {
            "$ref": "#/components/schemas/INVALIDSTRINGMAXLENGTH12"
          },
          {
            "$ref": "#/components/schemas/INVALIDSTRINGMAXLENGTH13"
          },
          {
            "$ref": "#/components/schemas/INVALIDSTRINGLENGTH7"
          },
          {
            "$ref": "#/components/schemas/INVALIDSTRINGMAXLENGTH14"
          },
          {
            "$ref": "#/components/schemas/INVALIDSTRINGMAXLENGTH15"
          },
          {
            "$ref": "#/components/schemas/INVALIDSTRINGMAXLENGTH16"
          },
          {
            "$ref": "#/components/schemas/INVALIDSTRINGMAXLENGTH17"
          },
          {
            "$ref": "#/components/schemas/INVALIDPARAMETERSYNTAX2"
          },
          {
            "$ref": "#/components/schemas/INVALIDSTRINGMAXLENGTH18"
          },
          {
            "$ref": "#/components/schemas/INVALIDSTRINGLENGTH8"
          },
          {
            "$ref": "#/components/schemas/INVALIDSTRINGMAXLENGTH19"
          },
          {
            "$ref": "#/components/schemas/INVALIDSTRINGMAXLENGTH20"
          },
          {
            "$ref": "#/components/schemas/INVALIDSTRINGMAXLENGTH21"
          },
          {
            "$ref": "#/components/schemas/INVALIDPARAMETERSYNTAX3"
          },
          {
            "$ref": "#/components/schemas/INVALIDSTRINGLENGTH9"
          },
          {
            "$ref": "#/components/schemas/INVALIDSTRINGMAXLENGTH22"
          },
          {
            "$ref": "#/components/schemas/INVALIDPARAMETERSYNTAX4"
          },
          {
            "$ref": "#/components/schemas/INVALIDSTRINGMAXLENGTH23"
          },
          {
            "$ref": "#/components/schemas/INVALIDSTRINGMAXLENGTH24"
          }
        ]
      },
      "INVALIDREFUNDAMOUNT": {
        "title": "INVALID_REFUND_AMOUNT",
        "properties": {
          "issue": {
            "type": "string",
            "enum": [
              "INVALID_REFUND_AMOUNT"
            ]
          },
          "description": {
            "type": "string",
            "enum": [
              "Recorded refunds cannot exceed recorded payments."
            ]
          }
        }
      },
      "ConfigurationAllOf2": {
        "properties": {
          "template_id": {
            "maxLength": 30,
            "type": "string",
            "description": "The template ID. The template determines the layout of the invoice. Includes which fields to show and hide.",
            "default": "PayPal system template"
          }
        }
      },
      "INVALIDINTEGERMINVALUE": {
        "title": "INVALID_INTEGER_MIN_VALUE",
        "properties": {
          "issue": {
            "type": "string",
            "enum": [
              "INVALID_INTEGER_MIN_VALUE"
            ]
          },
          "description": {
            "type": "string",
            "enum": [
              "Value less than minimum value."
            ]
          }
        }
      },
      "TemplatesUpdate400": {
        "properties": {
          "details": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Templatesupdate400Details"
            }
          }
        }
      },
      "INVALIDSTRINGLENGTH3": {
        "title": "INVALID_STRING_LENGTH",
        "properties": {
          "issue": {
            "type": "string",
            "enum": [
              "INVALID_STRING_LENGTH"
            ]
          },
          "description": {
            "type": "string",
            "enum": [
              "Attachment reference url length should be between 1 and 2000."
            ]
          }
        }
      },
      "INVALIDSTRINGLENGTH2": {
        "title": "INVALID_STRING_LENGTH",
        "properties": {
          "issue": {
            "type": "string",
            "enum": [
              "INVALID_STRING_LENGTH"
            ]
          },
          "description": {
            "type": "string",
            "enum": [
              "Item quantity length should be 1 and 14."
            ]
          }
        }
      },
      "INVALIDSTRINGLENGTH5": {
        "title": "INVALID_STRING_LENGTH",
        "properties": {
          "issue": {
            "type": "string",
            "enum": [
              "INVALID_STRING_LENGTH"
            ]
          },
          "description": {
            "type": "string",
            "enum": [
              "Currency code length should be 3 characters."
            ]
          }
        }
      },
      "INVALIDSTRINGLENGTH4": {
        "title": "INVALID_STRING_LENGTH",
        "properties": {
          "issue": {
            "type": "string",
            "enum": [
              "INVALID_STRING_LENGTH"
            ]
          },
          "description": {
            "type": "string",
            "enum": [
              "Country code length should be 2 characters."
            ]
          }
        }
      },
      "MISSINGREQUIREDPARAMETER": {
        "title": "MISSING_REQUIRED_PARAMETER",
        "properties": {
          "issue": {
            "type": "string",
            "enum": [
              "MISSING_REQUIRED_PARAMETER"
            ]
          },
          "description": {
            "type": "string",
            "enum": [
              "Payment method is missing. Please provide a valid payment method."
            ]
          }
        }
      },
      "UnitOfMeasure": {
        "type": "string",
        "description": "The unit of measure for the invoiced item",
        "enum": [
          "QUANTITY",
          "HOURS",
          "AMOUNT"
        ]
      },
      "403Details": {
        "anyOf": [
          {
            "$ref": "#/components/schemas/PERMISSIONDENIED"
          }
        ]
      },
      "INVALIDSTRINGLENGTH1": {
        "title": "INVALID_STRING_LENGTH",
        "properties": {
          "issue": {
            "type": "string",
            "enum": [
              "INVALID_STRING_LENGTH"
            ]
          },
          "description": {
            "type": "string",
            "enum": [
              "Language is invalid."
            ]
          }
        }
      },
      "INVALIDSTRINGLENGTH7": {
        "title": "INVALID_STRING_LENGTH",
        "properties": {
          "issue": {
            "type": "string",
            "enum": [
              "INVALID_STRING_LENGTH"
            ]
          },
          "description": {
            "type": "string",
            "enum": [
              "country code length should be between 1 and 3."
            ]
          }
        }
      },
      "INVALIDSTRINGLENGTH6": {
        "title": "INVALID_STRING_LENGTH",
        "properties": {
          "issue": {
            "type": "string",
            "enum": [
              "INVALID_STRING_LENGTH"
            ]
          },
          "description": {
            "type": "string",
            "enum": [
              "Attachment id length should be between 1 and 255."
            ]
          }
        }
      },
      "CANNOTCANCELSCHEDULEDINVOICE": {
        "title": "CANNOT_CANCEL_SCHEDULED_INVOICE",
        "properties": {
          "issue": {
            "type": "string",
            "enum": [
              "CANNOT_CANCEL_SCHEDULED_INVOICE"
            ]
          },
          "description": {
            "type": "string",
            "enum": [
              "Cannot cancel a scheduled invoice."
            ]
          }
        }
      },
      "INVALIDSTRINGLENGTH9": {
        "title": "INVALID_STRING_LENGTH",
        "properties": {
          "issue": {
            "type": "string",
            "enum": [
              "INVALID_STRING_LENGTH"
            ]
          },
          "description": {
            "type": "string",
            "enum": [
              "Invoice date is invalid."
            ]
          }
        }
      },
      "INVALIDSTRINGLENGTH8": {
        "title": "INVALID_STRING_LENGTH",
        "properties": {
          "issue": {
            "type": "string",
            "enum": [
              "INVALID_STRING_LENGTH"
            ]
          },
          "description": {
            "type": "string",
            "enum": [
              "Email address length should be between 3 and 254."
            ]
          }
        }
      },
      "InvoicesRemind422": {
        "properties": {
          "details": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Invoicesremind422Details"
            }
          }
        }
      },
      "CANNOTCANCELPAIDINVOICE": {
        "title": "CANNOT_CANCEL_PAID_INVOICE",
        "properties": {
          "issue": {
            "type": "string",
            "enum": [
              "CANNOT_CANCEL_PAID_INVOICE"
            ]
          },
          "description": {
            "type": "string",
            "enum": [
              "Cannot cancel a paid or partially paid invoice."
            ]
          }
        }
      },
      "InvoicesPayments400": {
        "properties": {
          "details": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Invoicespayments400Details"
            }
          }
        }
      },
      "ShippingCost": {
        "title": "Shipping Cost",
        "type": "object",
        "properties": {
          "amount": {
            "$ref": "#/components/schemas/Money"
          },
          "tax": {
            "$ref": "#/components/schemas/Tax"
          }
        },
        "description": "The shipping fee for all items. Includes tax on shipping"
      },
      "INVALIDINTEGERMAXVALUE2": {
        "title": "INVALID_INTEGER_MAX_VALUE",
        "properties": {
          "issue": {
            "type": "string",
            "enum": [
              "INVALID_INTEGER_MAX_VALUE"
            ]
          },
          "description": {
            "type": "string",
            "enum": [
              "Value exceeds max value."
            ]
          }
        }
      },
      "INVALIDINTEGERMAXVALUE1": {
        "title": "INVALID_INTEGER_MAX_VALUE",
        "properties": {
          "issue": {
            "type": "string",
            "enum": [
              "INVALID_INTEGER_MAX_VALUE"
            ]
          },
          "description": {
            "type": "string",
            "enum": [
              "Value exceeds max value."
            ]
          }
        }
      },
      "LinkDescription": {
        "title": "Link Description",
        "required": [
          "href",
          "rel"
        ],
        "type": "object",
        "properties": {
          "method": {
            "type": "string",
            "description": "The HTTP method required to make the related call",
            "enum": [
              "GET",
              "POST",
              "PUT",
              "DELETE",
              "HEAD",
              "CONNECT",
              "OPTIONS",
              "PATCH"
            ]
          },
          "rel": {
            "type": "string",
            "description": "The [link relation type](https://tools.ietf.org/html/rfc5988#section-4), which serves as an ID for a link that unambiguously describes the semantics of the link. See [Link Relations](https://www.iana.org/assignments/link-relations/link-relations.xhtml)"
          },
          "href": {
            "type": "string",
            "description": "The complete target URL. To make the related call, combine the method with this [URI Template-formatted](https://tools.ietf.org/html/rfc6570) link. For pre-processing, include the `$`, `(`, and `)` characters. The `href` is the key HATEOAS component that links a completed call with a subsequent call"
          }
        },
        "description": "The request-related [HATEOAS link](/docs/api/reference/api-responses/#hateoas-links) information"
      },
      "InvoiceCreationFlow": {
        "title": "Invoice Creation Flow",
        "type": "string",
        "description": "The frequency at which the invoice is sent:<ul><li>Multiple recipient. Sent to multiple recipients.</li><li>Batch. Sent in a batch.</li><li>Regular single. Sent one time to a single recipient.</li></ul>",
        "enum": [
          "MULTIPLE_RECIPIENTS_GROUP",
          "BATCH",
          "REGULAR_SINGLE"
        ]
      },
      "Invoices": {
        "title": "Invoices",
        "minItems": 1,
        "type": "object",
        "properties": {
          "links": {
            "type": "array",
            "description": "An array of request-related [HATEOAS links](/docs/api/reference/api-responses/#hateoas-links)",
            "readOnly": true,
            "items": {
              "$ref": "#/components/schemas/LinkDescription"
            }
          },
          "total_pages": {
            "type": "integer",
            "description": "The total number of pages that are available for the search criteria. <blockquote><strong>Note:</strong> Clients MUST NOT assume that the value of total_pages is constant. The value MAY change from one request to the next</blockquote>",
            "readOnly": true,
            "x-ballerina-name-ignore": "totalPages"
          },
          "total_items": {
            "type": "integer",
            "description": "The total number of invoices that match the search criteria.<blockquote><strong>Note:</strong> Clients MUST NOT assume that the value of <code>total_items</code> is constant. The value MAY change from one request to the next.</blockquote>",
            "readOnly": true,
            "x-ballerina-name-ignore": "totalItems"
          },
          "items": {
            "type": "array",
            "description": "The list of invoices that match the search criteria",
            "readOnly": true,
            "items": {
              "$ref": "#/components/schemas/Invoice"
            }
          }
        },
        "description": "An array of merchant invoices. Includes the total invoices count and [HATEOAS links](/docs/api/reference/api-responses/#hateoas-links) for navigation"
      },
      "INVALIDINTEGERMAXVALUE": {
        "title": "INVALID_INTEGER_MAX_VALUE",
        "properties": {
          "issue": {
            "type": "string",
            "enum": [
              "INVALID_INTEGER_MAX_VALUE"
            ]
          },
          "description": {
            "type": "string",
            "enum": [
              "Value exceeds max value."
            ]
          }
        }
      },
      "AggregatedDiscount": {
        "title": "Aggregated Discount",
        "type": "object",
        "properties": {
          "item_discount": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Money"
              }
            ],
            "x-ballerina-name-ignore": "itemDiscount"
          },
          "invoice_discount": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Discount"
              }
            ],
            "x-ballerina-name-ignore": "invoiceDiscount"
          }
        },
        "description": "The discount. Can be an item- or invoice-level discount, or both. Can be applied as a percent or amount. If you provide both amount and percent, amount takes precedent"
      },
      "AmountWithBreakdown": {
        "title": "Amount with Breakdown",
        "type": "object",
        "properties": {
          "tax_total": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Money"
              }
            ],
            "x-ballerina-name-ignore": "taxTotal"
          },
          "shipping": {
            "$ref": "#/components/schemas/ShippingCost"
          },
          "custom": {
            "$ref": "#/components/schemas/CustomAmount"
          },
          "discount": {
            "$ref": "#/components/schemas/AggregatedDiscount"
          },
          "item_total": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Money"
              }
            ],
            "x-ballerina-name-ignore": "itemTotal"
          }
        },
        "description": "The breakdown of the amount. Includes total item amount, total tax amount, custom amount, and shipping and discounts, if any"
      },
      "Money": {
        "title": "Money",
        "required": [
          "currency_code",
          "value"
        ],
        "type": "object",
        "properties": {
          "value": {
            "maxLength": 32,
            "pattern": "^((-?[0-9]+)|(-?([0-9]+)?[.][0-9]+))$",
            "type": "string",
            "description": "The value, which might be:<ul><li>An integer for currencies like `JPY` that are not typically fractional.</li><li>A decimal fraction for currencies like `TND` that are subdivided into thousandths.</li></ul>For the required number of decimal places for a currency code, see [Currency Codes](/docs/integration/direct/rest/currency-codes/)"
          },
          "currency_code": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CurrencyCode"
              }
            ],
            "x-ballerina-name-ignore": "currencyCode"
          }
        },
        "description": "The currency and amount for a financial transaction, such as a balance or payment due"
      },
      "UnprocessableEntity": {
        "properties": {
          "details": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/422Details"
            }
          }
        }
      },
      "Language": {
        "maxLength": 10,
        "minLength": 2,
        "pattern": "^[a-z]{2}(?:-[A-Z][a-z]{3})?(?:-(?:[A-Z]{2}))?$",
        "type": "string",
        "description": "The [language tag](https://tools.ietf.org/html/bcp47#section-2) for the language in which to localize the error-related strings, such as messages, issues, and suggested actions. The tag is made up of the [ISO 639-2 language code](https://www.loc.gov/standards/iso639-2/php/code_list.php), the optional [ISO-15924 script tag](https://www.unicode.org/iso15924/codelists.html), and the [ISO-3166 alpha-2 country code](/docs/integration/direct/rest/country-codes/)",
        "format": "ppaas_common_language_v3"
      },
      "TemplateSubtotalField": {
        "title": "Template Subtotal Field",
        "type": "string",
        "description": "The field names in the template for discount, shipping, and custom amounts",
        "enum": [
          "DISCOUNT",
          "SHIPPING",
          "CUSTOM"
        ]
      },
      "DateTimeRange": {
        "title": "Date and Time Range",
        "required": [
          "end",
          "start"
        ],
        "type": "object",
        "properties": {
          "start": {
            "$ref": "#/components/schemas/DateTime"
          },
          "end": {
            "$ref": "#/components/schemas/DateTime"
          }
        },
        "description": "The date and time range. Filters invoices by creation date, invoice date, due date, and payment date"
      },
      "TemplatesUpdate422": {
        "properties": {
          "details": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Templatesupdate422Details"
            }
          }
        }
      },
      "RefundReference": {
        "title": "Refund Payment Reference",
        "type": "object",
        "properties": {
          "refund_id": {
            "type": "string",
            "description": "The ID of the refund of an invoice payment",
            "readOnly": true,
            "x-ballerina-name-ignore": "refundId"
          }
        },
        "description": "The reference to the refund payment detail"
      },
      "InlineResponse40010": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Error400"
          },
          {
            "$ref": "#/components/schemas/TemplatesUpdate400"
          }
        ]
      },
      "TEMPLATENAMEALREADYEXISTS": {
        "title": "TEMPLATE_NAME_ALREADY_EXISTS",
        "properties": {
          "issue": {
            "type": "string",
            "enum": [
              "TEMPLATE_NAME_ALREADY_EXISTS"
            ]
          },
          "description": {
            "type": "string",
            "enum": [
              "Template name already exists."
            ]
          }
        }
      },
      "PaymentTerm": {
        "title": "Payment Term",
        "type": "object",
        "properties": {
          "term_type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PaymentTermType"
              }
            ],
            "x-ballerina-name-ignore": "termType"
          }
        },
        "description": "The payment term of the invoice. Payment can be due upon receipt, a specified date, or in a set number of days"
      },
      "PAYMENTAMOUNTGREATERTHANAMOUNTDUE": {
        "title": "PAYMENT_AMOUNT_GREATER_THAN_AMOUNT_DUE",
        "properties": {
          "issue": {
            "type": "string",
            "enum": [
              "PAYMENT_AMOUNT_GREATER_THAN_AMOUNT_DUE"
            ]
          },
          "description": {
            "type": "string",
            "enum": [
              "Payment amount is greater than the amount due."
            ]
          }
        }
      },
      "InvoicesRemind400": {
        "properties": {
          "details": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Invoicesremind400Details"
            }
          }
        }
      },
      "InvoicesPayments422": {
        "properties": {
          "details": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Invoicespayments422Details"
            }
          }
        }
      },
      "TemplateMetadata": {
        "title": "Template Metadata",
        "type": "object",
        "properties": {
          "last_update_time": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DateTime"
              }
            ],
            "x-ballerina-name-ignore": "lastUpdateTime"
          },
          "last_updated_by": {
            "type": "string",
            "description": "The email address of the account that last edited the resource",
            "readOnly": true,
            "x-ballerina-name-ignore": "lastUpdatedBy"
          },
          "create_time": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DateTime"
              }
            ],
            "x-ballerina-name-ignore": "createTime"
          },
          "created_by": {
            "type": "string",
            "description": "The email address of the account that created the resource",
            "readOnly": true,
            "x-ballerina-name-ignore": "createdBy"
          }
        },
        "description": "The audit metadata. Captures all template actions on create and update"
      },
      "INVALIDSTRINGMAXLENGTH31": {
        "title": "INVALID_STRING_MAX_LENGTH",
        "properties": {
          "issue": {
            "type": "string",
            "enum": [
              "INVALID_STRING_MAX_LENGTH"
            ]
          },
          "description": {
            "type": "string",
            "enum": [
              "Custom label length should be less than 50 characters."
            ]
          }
        }
      },
      "Error503": {
        "title": "Service Unavailable Error",
        "type": "object",
        "properties": {
          "debug_id": {
            "type": "string",
            "description": "The PayPal internal ID. Used for correlation purposes",
            "x-ballerina-name-ignore": "debugId"
          },
          "name": {
            "type": "string",
            "enum": [
              "SERVICE_UNAVAILABLE"
            ]
          },
          "links": {
            "maxItems": 10000,
            "minItems": 0,
            "type": "array",
            "description": "An array of request-related [HATEOAS links](https://en.wikipedia.org/wiki/HATEOAS)",
            "items": {
              "$ref": "#/components/schemas/ErrorLinkDescription"
            }
          },
          "message": {
            "type": "string",
            "enum": [
              "Service Unavailable."
            ]
          }
        },
        "description": "The server is temporarily unable to handle the request, for example, because of planned maintenance or downtime",
        "example": {
          "name": "SERVICE_UNAVAILABLE",
          "message": "Service Unavailable.",
          "debug_id": "90957fca61718",
          "information_link": "https://developer.paypal.com/docs/api/orders/v2/#error-SERVICE_UNAVAILABLE"
        }
      },
      "INVALIDSTRINGMAXLENGTH32": {
        "title": "INVALID_STRING_MAX_LENGTH",
        "properties": {
          "issue": {
            "type": "string",
            "enum": [
              "INVALID_STRING_MAX_LENGTH"
            ]
          },
          "description": {
            "type": "string",
            "enum": [
              "Given name length should be less than 140 characters."
            ]
          }
        }
      },
      "INVALIDPARAMETERSYNTAX": {
        "title": "INVALID_PARAMETER_SYNTAX",
        "properties": {
          "issue": {
            "type": "string",
            "enum": [
              "INVALID_PARAMETER_SYNTAX"
            ]
          },
          "description": {
            "type": "string",
            "enum": [
              "Country code is invalid."
            ]
          }
        }
      },
      "INVALIDSTRINGMAXLENGTH33": {
        "title": "INVALID_STRING_MAX_LENGTH",
        "properties": {
          "issue": {
            "type": "string",
            "enum": [
              "INVALID_STRING_MAX_LENGTH"
            ]
          },
          "description": {
            "type": "string",
            "enum": [
              "Admin area1 length should be less than 300 characters."
            ]
          }
        }
      },
      "INVALIDSTRINGMAXLENGTH34": {
        "title": "INVALID_STRING_MAX_LENGTH",
        "properties": {
          "issue": {
            "type": "string",
            "enum": [
              "INVALID_STRING_MAX_LENGTH"
            ]
          },
          "description": {
            "type": "string",
            "enum": [
              "Surname length should be less than 140 characters."
            ]
          }
        }
      },
      "Invoice": {
        "title": "Invoice",
        "required": [
          "detail"
        ],
        "type": "object",
        "properties": {
          "amount": {
            "$ref": "#/components/schemas/AmountSummaryDetail"
          },
          "configuration": {
            "$ref": "#/components/schemas/Configuration"
          },
          "payments": {
            "$ref": "#/components/schemas/Payments"
          },
          "gratuity": {
            "$ref": "#/components/schemas/Money"
          },
          "primary_recipients": {
            "maxItems": 100,
            "type": "array",
            "description": "The billing and shipping information. Includes name, email, address, phone and language",
            "items": {
              "$ref": "#/components/schemas/RecipientInfo"
            },
            "x-ballerina-name-ignore": "primaryRecipients"
          },
          "refunds": {
            "$ref": "#/components/schemas/Refunds"
          },
          "due_amount": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Money"
              }
            ],
            "x-ballerina-name-ignore": "dueAmount"
          },
          "parent_id": {
            "maxLength": 30,
            "type": "string",
            "description": "The parent ID to an invoice that defines the group invoice to which the invoice is related",
            "readOnly": true,
            "x-ballerina-name-ignore": "parentId"
          },
          "invoicer": {
            "$ref": "#/components/schemas/InvoicerInfo"
          },
          "links": {
            "type": "array",
            "description": "An array of request-related [HATEOAS links](/docs/api/reference/api-responses/#hateoas-links)",
            "readOnly": true,
            "items": {
              "$ref": "#/components/schemas/LinkDescription"
            }
          },
          "id": {
            "maxLength": 30,
            "type": "string",
            "description": "The ID of the invoice",
            "readOnly": true
          },
          "detail": {
            "$ref": "#/components/schemas/InvoiceDetail"
          },
          "additional_recipients": {
            "maxItems": 100,
            "type": "array",
            "description": "An array of one or more CC: emails to which notifications are sent. If you omit this parameter, a notification is sent to all CC: email addresses that are part of the invoice.<blockquote><strong>Note:</strong> Valid values are email addresses in the `additional_recipients` value associated with the invoice.</blockquote>",
            "items": {
              "$ref": "#/components/schemas/EmailAddress"
            },
            "x-ballerina-name-ignore": "additionalRecipients"
          },
          "items": {
            "maxItems": 100,
            "type": "array",
            "description": "An array of invoice line item information",
            "items": {
              "$ref": "#/components/schemas/Item"
            }
          },
          "status": {
            "$ref": "#/components/schemas/InvoiceStatus"
          }
        },
        "description": "The invoice details which includes all information of the invoice like items, billing information"
      },
      "INVALIDSTRINGMAXLENGTH35": {
        "title": "INVALID_STRING_MAX_LENGTH",
        "properties": {
          "issue": {
            "type": "string",
            "enum": [
              "INVALID_STRING_MAX_LENGTH"
            ]
          },
          "description": {
            "type": "string",
            "enum": [
              "Business name length should be less than 300 characters."
            ]
          }
        }
      },
      "INVALIDSTRINGMAXLENGTH36": {
        "title": "INVALID_STRING_MAX_LENGTH",
        "properties": {
          "issue": {
            "type": "string",
            "enum": [
              "INVALID_STRING_MAX_LENGTH"
            ]
          },
          "description": {
            "type": "string",
            "enum": [
              "Minimum due amount length should be less than 32 characters."
            ]
          }
        }
      },
      "INVALIDSTRINGMAXLENGTH37": {
        "title": "INVALID_STRING_MAX_LENGTH",
        "properties": {
          "issue": {
            "type": "string",
            "enum": [
              "INVALID_STRING_MAX_LENGTH"
            ]
          },
          "description": {
            "type": "string",
            "enum": [
              "Admin area2 length should be less than 300 characters."
            ]
          }
        }
      },
      "INVALIDSTRINGMAXLENGTH38": {
        "title": "INVALID_STRING_MAX_LENGTH",
        "properties": {
          "issue": {
            "type": "string",
            "enum": [
              "INVALID_STRING_MAX_LENGTH"
            ]
          },
          "description": {
            "type": "string",
            "enum": [
              "Tax name length should be less than 100."
            ]
          }
        }
      },
      "INVALIDSTRINGMAXLENGTH39": {
        "title": "INVALID_STRING_MAX_LENGTH",
        "properties": {
          "issue": {
            "type": "string",
            "enum": [
              "INVALID_STRING_MAX_LENGTH"
            ]
          },
          "description": {
            "type": "string",
            "enum": [
              "Website url length should be less than 2048 characters."
            ]
          }
        }
      },
      "Payments": {
        "title": "Payments",
        "type": "object",
        "properties": {
          "paid_amount": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Money"
              }
            ],
            "x-ballerina-name-ignore": "paidAmount"
          },
          "transactions": {
            "maxItems": 100,
            "type": "array",
            "description": "An array of payment details for the invoice. The payment details of the invoice like payment type, method, date, discount and transaction type",
            "readOnly": true,
            "items": {
              "$ref": "#/components/schemas/PaymentDetail"
            }
          }
        },
        "description": "An array of payments registered against the invoice"
      },
      "InvoicePaymentTerm": {
        "title": "Invoice Payment Term",
        "type": "object",
        "description": "The payment term of the invoice. Payment can be due upon receipt, a specified date, or in a set number of days",
        "allOf": [
          {
            "$ref": "#/components/schemas/PaymentTerm"
          },
          {
            "$ref": "#/components/schemas/InvoicePaymentTermAllOf2"
          }
        ]
      },
      "ForbiddenError": {
        "properties": {
          "details": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/403Details"
            }
          }
        }
      },
      "DateTime": {
        "maxLength": 64,
        "minLength": 20,
        "pattern": "^[0-9]{4}-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])[T,t]([0-1][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)([.][0-9]+)?([Zz]|[+-][0-9]{2}:[0-9]{2})$",
        "type": "string",
        "description": "The date and time, in [Internet date and time format](https://tools.ietf.org/html/rfc3339#section-5.6). Seconds are required while fractional seconds are optional.<blockquote><strong>Note:</strong> The regular expression provides guidance but does not reject all invalid dates.</blockquote>",
        "format": "ppaas_date_time_v3"
      },
      "Item": {
        "title": "Invoice Item",
        "required": [
          "name",
          "quantity",
          "unit_amount"
        ],
        "type": "object",
        "properties": {
          "quantity": {
            "maxLength": 14,
            "minLength": 0,
            "type": "string",
            "description": "The quantity of the item that the invoicer provides to the payer. Value is from `-1000000` to `1000000`. Supports up to five decimal places"
          },
          "item_date": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DateNoTime"
              }
            ],
            "x-ballerina-name-ignore": "itemDate"
          },
          "name": {
            "maxLength": 200,
            "type": "string",
            "description": "The item name for the invoice line item"
          },
          "description": {
            "maxLength": 1000,
            "type": "string",
            "description": "The item description for the invoice line item"
          },
          "discount": {
            "$ref": "#/components/schemas/Discount"
          },
          "unit_of_measure": {
            "allOf": [
              {
                "$ref": "#/components/schemas/UnitOfMeasure"
              }
            ],
            "x-ballerina-name-ignore": "unitOfMeasure"
          },
          "tax": {
            "$ref": "#/components/schemas/Tax"
          },
          "id": {
            "maxLength": 22,
            "type": "string",
            "description": "The ID of the invoice line item",
            "readOnly": true
          },
          "unit_amount": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Money"
              }
            ],
            "x-ballerina-name-ignore": "unitAmount"
          }
        },
        "description": "An array of invoice line item information. The maximum items for an invoice is `100`"
      },
      "BadRequest": {
        "properties": {
          "details": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/400Details"
            }
          }
        }
      },
      "INVALIDINTEGERVALUE1": {
        "title": "INVALID_INTEGER_VALUE",
        "properties": {
          "issue": {
            "type": "string",
            "enum": [
              "INVALID_INTEGER_VALUE"
            ]
          },
          "description": {
            "type": "string",
            "enum": [
              "Refund amount value is invalid. Can have non-negative value with maximum 6 digits."
            ]
          }
        }
      },
      "Templatescreate422Details": {
        "anyOf": [
          {
            "$ref": "#/components/schemas/CANNOTCANCELDRAFTINVOICE1"
          }
        ]
      },
      "INVALIDPARAMETERSYNTAX7": {
        "title": "INVALID_PARAMETER_SYNTAX",
        "properties": {
          "issue": {
            "type": "string",
            "enum": [
              "INVALID_PARAMETER_SYNTAX"
            ]
          },
          "description": {
            "type": "string",
            "enum": [
              "The value provided is not an acceptable method of refund."
            ]
          }
        }
      },
      "INVALIDPARAMETERSYNTAX8": {
        "title": "INVALID_PARAMETER_SYNTAX",
        "properties": {
          "issue": {
            "type": "string",
            "enum": [
              "INVALID_PARAMETER_SYNTAX"
            ]
          },
          "description": {
            "type": "string",
            "enum": [
              "Amount value is invalid. Should be a numeric value."
            ]
          }
        }
      },
      "TemplatesGet403": {
        "properties": {
          "details": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Templatesget403Details"
            }
          }
        }
      },
      "INVALIDPARAMETERSYNTAX5": {
        "title": "INVALID_PARAMETER_SYNTAX",
        "properties": {
          "issue": {
            "type": "string",
            "enum": [
              "INVALID_PARAMETER_SYNTAX"
            ]
          },
          "description": {
            "type": "string",
            "enum": [
              "Amount value is invalid. Should be a numeric value."
            ]
          }
        }
      },
      "INVALIDPARAMETERSYNTAX6": {
        "title": "INVALID_PARAMETER_SYNTAX",
        "properties": {
          "issue": {
            "type": "string",
            "enum": [
              "INVALID_PARAMETER_SYNTAX"
            ]
          },
          "description": {
            "type": "string",
            "enum": [
              "Date should be of format yyyy-mm-dd."
            ]
          }
        }
      },
      "InvoiceNumber": {
        "title": "Invoice Number",
        "type": "object",
        "properties": {
          "invoice_number": {
            "maxLength": 25,
            "type": "string",
            "description": "The invoice number. If you omit this value, the default is the auto-incremented number from the last number",
            "readOnly": true,
            "x-ballerina-name-ignore": "invoiceNumber"
          }
        },
        "description": "The invoice number"
      },
      "Error500": {
        "title": "Internal Server Error",
        "type": "object",
        "properties": {
          "debug_id": {
            "type": "string",
            "description": "The PayPal internal ID. Used for correlation purposes",
            "x-ballerina-name-ignore": "debugId"
          },
          "name": {
            "type": "string",
            "enum": [
              "INTERNAL_SERVER_ERROR"
            ]
          },
          "links": {
            "maxItems": 10000,
            "minItems": 0,
            "type": "array",
            "description": "An array of request-related [HATEOAS links](https://en.wikipedia.org/wiki/HATEOAS)",
            "items": {
              "$ref": "#/components/schemas/ErrorLinkDescription"
            }
          },
          "message": {
            "type": "string",
            "enum": [
              "An internal server error occurred."
            ]
          }
        },
        "description": "This is either a system or application error, and generally indicates that although the client appeared to provide a correct request, something unexpected has gone wrong on the server",
        "example": {
          "name": "INTERNAL_SERVER_ERROR",
          "message": "An internal server error occurred.",
          "debug_id": "90957fca61718",
          "links": [
            {
              "href": "https://developer.paypal.com/api/orders/v2/#error-INTERNAL_SERVER_ERROR",
              "rel": "information_link"
            }
          ]
        }
      },
      "INVALIDPARAMETERSYNTAX9": {
        "title": "INVALID_PARAMETER_SYNTAX",
        "properties": {
          "issue": {
            "type": "string",
            "enum": [
              "INVALID_PARAMETER_SYNTAX"
            ]
          },
          "description": {
            "type": "string",
            "enum": [
              "Value of the field does not conform to the expected format."
            ]
          }
        }
      },
      "INVALIDSTRINGMAXLENGTH40": {
        "title": "INVALID_STRING_MAX_LENGTH",
        "properties": {
          "issue": {
            "type": "string",
            "enum": [
              "INVALID_STRING_MAX_LENGTH"
            ]
          },
          "description": {
            "type": "string",
            "enum": [
              "Postal code length should be less than 60 characters."
            ]
          }
        }
      },
      "INVALIDSTRINGMAXLENGTH41": {
        "title": "INVALID_STRING_MAX_LENGTH",
        "properties": {
          "issue": {
            "type": "string",
            "enum": [
              "INVALID_STRING_MAX_LENGTH"
            ]
          },
          "description": {
            "type": "string",
            "enum": [
              "Memo length should be less than 4000 characters."
            ]
          }
        }
      },
      "INVALIDSTRINGMAXLENGTH20": {
        "title": "INVALID_STRING_MAX_LENGTH",
        "properties": {
          "issue": {
            "type": "string",
            "enum": [
              "INVALID_STRING_MAX_LENGTH"
            ]
          },
          "description": {
            "type": "string",
            "enum": [
              "Additional information value length should be less than 40 characters."
            ]
          }
        }
      },
      "INVALIDSTRINGMAXLENGTH21": {
        "title": "INVALID_STRING_MAX_LENGTH",
        "properties": {
          "issue": {
            "type": "string",
            "enum": [
              "INVALID_STRING_MAX_LENGTH"
            ]
          },
          "description": {
            "type": "string",
            "enum": [
              "Tax id length should be less than 100 characters."
            ]
          }
        }
      },
      "INVALIDINTEGERMINVALUE2": {
        "title": "INVALID_INTEGER_MIN_VALUE",
        "properties": {
          "issue": {
            "type": "string",
            "enum": [
              "INVALID_INTEGER_MIN_VALUE"
            ]
          },
          "description": {
            "type": "string",
            "enum": [
              "Value less than minimum value."
            ]
          }
        }
      },
      "INVALIDSTRINGMAXLENGTH22": {
        "title": "INVALID_STRING_MAX_LENGTH",
        "properties": {
          "issue": {
            "type": "string",
            "enum": [
              "INVALID_STRING_MAX_LENGTH"
            ]
          },
          "description": {
            "type": "string",
            "enum": [
              "Invoice number length should be less than 25 characters."
            ]
          }
        }
      },
      "INVALIDSTRINGMAXLENGTH23": {
        "title": "INVALID_STRING_MAX_LENGTH",
        "properties": {
          "issue": {
            "type": "string",
            "enum": [
              "INVALID_STRING_MAX_LENGTH"
            ]
          },
          "description": {
            "type": "string",
            "enum": [
              "Item description length should be less than 1000 characters."
            ]
          }
        }
      },
      "BusinessName": {
        "title": "Business Name",
        "type": "object",
        "properties": {
          "business_name": {
            "maxLength": 300,
            "type": "string",
            "description": "Required. The business name of the party",
            "x-ballerina-name-ignore": "businessName"
          }
        },
        "description": "The business name of the party"
      },
      "INVALIDPARAMETERSYNTAX3": {
        "title": "INVALID_PARAMETER_SYNTAX",
        "properties": {
          "issue": {
            "type": "string",
            "enum": [
              "INVALID_PARAMETER_SYNTAX"
            ]
          },
          "description": {
            "type": "string",
            "enum": [
              "Invoice date is invalid."
            ]
          }
        }
      },
      "INVALIDSTRINGMAXLENGTH24": {
        "title": "INVALID_STRING_MAX_LENGTH",
        "properties": {
          "issue": {
            "type": "string",
            "enum": [
              "INVALID_STRING_MAX_LENGTH"
            ]
          },
          "description": {
            "type": "string",
            "enum": [
              "Shipping Tax name length should be less than 100 characters."
            ]
          }
        }
      },
      "INVALIDPARAMETERSYNTAX4": {
        "title": "INVALID_PARAMETER_SYNTAX",
        "properties": {
          "issue": {
            "type": "string",
            "enum": [
              "INVALID_PARAMETER_SYNTAX"
            ]
          },
          "description": {
            "type": "string",
            "enum": [
              "Item Date is invalid."
            ]
          }
        }
      },
      "INVALIDSTRINGMAXLENGTH25": {
        "title": "INVALID_STRING_MAX_LENGTH",
        "properties": {
          "issue": {
            "type": "string",
            "enum": [
              "INVALID_STRING_MAX_LENGTH"
            ]
          },
          "description": {
            "type": "string",
            "enum": [
              "the value of a field is too long."
            ]
          }
        }
      },
      "INVALIDPARAMETERSYNTAX1": {
        "title": "INVALID_PARAMETER_SYNTAX",
        "properties": {
          "issue": {
            "type": "string",
            "enum": [
              "INVALID_PARAMETER_SYNTAX"
            ]
          },
          "description": {
            "type": "string",
            "enum": [
              "National Number is not valid."
            ]
          }
        }
      },
      "INVALIDSTRINGMAXLENGTH26": {
        "title": "INVALID_STRING_MAX_LENGTH",
        "properties": {
          "issue": {
            "type": "string",
            "enum": [
              "INVALID_STRING_MAX_LENGTH"
            ]
          },
          "description": {
            "type": "string",
            "enum": [
              "Field value exceeded the maximum allowed number of characters."
            ]
          }
        }
      },
      "INVALIDINTEGERMINVALUE1": {
        "title": "INVALID_INTEGER_MIN_VALUE",
        "properties": {
          "issue": {
            "type": "string",
            "enum": [
              "INVALID_INTEGER_MIN_VALUE"
            ]
          },
          "description": {
            "type": "string",
            "enum": [
              "Value less than minimum value."
            ]
          }
        }
      },
      "INVALIDPARAMETERSYNTAX2": {
        "title": "INVALID_PARAMETER_SYNTAX",
        "properties": {
          "issue": {
            "type": "string",
            "enum": [
              "INVALID_PARAMETER_SYNTAX"
            ]
          },
          "description": {
            "type": "string",
            "enum": [
              "Due date is invalid."
            ]
          }
        }
      },
      "INVALIDSTRINGMAXLENGTH27": {
        "title": "INVALID_STRING_MAX_LENGTH",
        "properties": {
          "issue": {
            "type": "string",
            "enum": [
              "INVALID_STRING_MAX_LENGTH"
            ]
          },
          "description": {
            "type": "string",
            "enum": [
              "Amount value cannot be greater than the maximum limit of 32 characters length."
            ]
          }
        }
      },
      "BillingInfoAllOf2": {
        "properties": {
          "email_address": {
            "$ref": "#/components/schemas/EmailAddress"
          },
          "phones": {
            "type": "array",
            "description": "The invoice recipient's phone numbers. Extension number is not supported.",
            "items": {
              "$ref": "#/components/schemas/PhoneDetail"
            }
          },
          "additional_info": {
            "maxLength": 40,
            "type": "string",
            "description": "Any additional information about the recipient."
          },
          "language": {
            "$ref": "#/components/schemas/Language"
          }
        }
      },
      "INVALIDSTRINGMAXLENGTH28": {
        "title": "INVALID_STRING_MAX_LENGTH",
        "properties": {
          "issue": {
            "type": "string",
            "enum": [
              "INVALID_STRING_MAX_LENGTH"
            ]
          },
          "description": {
            "type": "string",
            "enum": [
              "Amount value cannot be greater than the maximum limit of 32 characters length."
            ]
          }
        }
      },
      "INVALIDSTRINGMAXLENGTH29": {
        "title": "INVALID_STRING_MAX_LENGTH",
        "properties": {
          "issue": {
            "type": "string",
            "enum": [
              "INVALID_STRING_MAX_LENGTH"
            ]
          },
          "description": {
            "type": "string",
            "enum": [
              "Address line2 length should be less than 300 characters."
            ]
          }
        }
      },
      "EmailAddress": {
        "maxLength": 254,
        "minLength": 3,
        "pattern": "^.+@[^\"\\-].+$",
        "type": "string",
        "description": "The internationalized email address.<blockquote><strong>Note:</strong> Up to 64 characters are allowed before and 255 characters are allowed after the <code>@</code> sign. However, the generally accepted maximum length for an email address is 254 characters. The pattern verifies that an unquoted <code>@</code> sign exists.</blockquote>",
        "format": "ppaas_common_email_address_v2"
      },
      "TemplateDetail": {
        "title": "Template Detail",
        "type": "object",
        "description": "The template-related details. Includes notes, terms and conditions, memo, and attachments",
        "allOf": [
          {
            "$ref": "#/components/schemas/Detail"
          },
          {
            "$ref": "#/components/schemas/TemplateDetailAllOf2"
          }
        ]
      },
      "InlineResponse4001": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Error400"
          },
          {
            "$ref": "#/components/schemas/InvoicesCreate400"
          }
        ]
      },
      "INVALIDINTEGERVALUE": {
        "title": "INVALID_INTEGER_VALUE",
        "properties": {
          "issue": {
            "type": "string",
            "enum": [
              "INVALID_INTEGER_VALUE"
            ]
          },
          "description": {
            "type": "string",
            "enum": [
              "Payment amount value is invalid. Can have non-negative value with maximum 6 digits."
            ]
          }
        }
      },
      "InlineResponse4003": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Error400"
          },
          {
            "$ref": "#/components/schemas/InvoicesCancel400"
          }
        ]
      },
      "InlineResponse4002": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Error400"
          },
          {
            "$ref": "#/components/schemas/InvoicesRemind400"
          }
        ]
      },
      "InlineResponse4005": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Error400"
          },
          {
            "$ref": "#/components/schemas/InvoicesRefunds400"
          }
        ]
      },
      "InlineResponse4004": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Error400"
          },
          {
            "$ref": "#/components/schemas/InvoicesPayments400"
          }
        ]
      },
      "InlineResponse4007": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Error400"
          },
          {
            "$ref": "#/components/schemas/InvoicesUpdate400"
          }
        ]
      },
      "InlineResponse4006": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Error400"
          },
          {
            "$ref": "#/components/schemas/InvoicesGenerateQrCode400"
          }
        ]
      },
      "InlineResponse4009": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Error400"
          },
          {
            "$ref": "#/components/schemas/TemplatesCreate400"
          }
        ]
      },
      "InlineResponse4008": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Error400"
          },
          {
            "$ref": "#/components/schemas/InvoicesSearchInvoices400"
          }
        ]
      },
      "INVALIDSTRINGMAXLENGTH30": {
        "title": "INVALID_STRING_MAX_LENGTH",
        "properties": {
          "issue": {
            "type": "string",
            "enum": [
              "INVALID_STRING_MAX_LENGTH"
            ]
          },
          "description": {
            "type": "string",
            "enum": [
              "Address line1 length should be less than 300 characters."
            ]
          }
        }
      },
      "Error404": {
        "title": "Not found Error",
        "type": "object",
        "properties": {
          "debug_id": {
            "type": "string",
            "description": "The PayPal internal ID. Used for correlation purposes",
            "x-ballerina-name-ignore": "debugId"
          },
          "name": {
            "type": "string",
            "enum": [
              "RESOURCE_NOT_FOUND"
            ]
          },
          "details": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ErrorDetails"
            }
          },
          "links": {
            "maxItems": 10000,
            "minItems": 0,
            "type": "array",
            "description": "An array of request-related [HATEOAS links](https://en.wikipedia.org/wiki/HATEOAS)",
            "items": {
              "$ref": "#/components/schemas/ErrorLinkDescription"
            }
          },
          "message": {
            "type": "string",
            "enum": [
              "The specified resource does not exist."
            ]
          }
        },
        "description": "The server has not found anything matching the request URI. This either means that the URI is incorrect or the resource is not available"
      },
      "INVALIDSTRINGMAXLENGTH10": {
        "title": "INVALID_STRING_MAX_LENGTH",
        "properties": {
          "issue": {
            "type": "string",
            "enum": [
              "INVALID_STRING_MAX_LENGTH"
            ]
          },
          "description": {
            "type": "string",
            "enum": [
              "Website url length should be less than 2048 characters."
            ]
          }
        }
      },
      "INVALIDSTRINGMAXLENGTH11": {
        "title": "INVALID_STRING_MAX_LENGTH",
        "properties": {
          "issue": {
            "type": "string",
            "enum": [
              "INVALID_STRING_MAX_LENGTH"
            ]
          },
          "description": {
            "type": "string",
            "enum": [
              "Postal code length should be less than 60 characters."
            ]
          }
        }
      },
      "Discount": {
        "title": "Discount",
        "type": "object",
        "properties": {
          "amount": {
            "$ref": "#/components/schemas/Money"
          },
          "percent": {
            "$ref": "#/components/schemas/Percentage"
          }
        },
        "description": "The discount as a percent or amount at invoice level. The invoice discount amount is subtracted from the item total"
      },
      "INVALIDSTRINGMAXLENGTH12": {
        "title": "INVALID_STRING_MAX_LENGTH",
        "properties": {
          "issue": {
            "type": "string",
            "enum": [
              "INVALID_STRING_MAX_LENGTH"
            ]
          },
          "description": {
            "type": "string",
            "enum": [
              "Memo length should be less than 4000 characters."
            ]
          }
        }
      },
      "INVALIDSTRINGMAXLENGTH13": {
        "title": "INVALID_STRING_MAX_LENGTH",
        "properties": {
          "issue": {
            "type": "string",
            "enum": [
              "INVALID_STRING_MAX_LENGTH"
            ]
          },
          "description": {
            "type": "string",
            "enum": [
              "Item name length should be less than 200 characters."
            ]
          }
        }
      },
      "Error409": {
        "title": "Resource Conflict Error",
        "type": "object",
        "properties": {
          "debug_id": {
            "type": "string",
            "description": "The PayPal internal ID. Used for correlation purposes",
            "x-ballerina-name-ignore": "debugId"
          },
          "name": {
            "type": "string",
            "enum": [
              "RESOURCE_CONFLICT"
            ]
          },
          "details": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ErrorDetails"
            }
          },
          "links": {
            "maxItems": 10000,
            "minItems": 0,
            "type": "array",
            "description": "An array of request-related [HATEOAS links](https://en.wikipedia.org/wiki/HATEOAS)",
            "items": {
              "$ref": "#/components/schemas/ErrorLinkDescription"
            }
          },
          "message": {
            "type": "string",
            "enum": [
              "The server has detected a conflict while processing this request."
            ]
          }
        },
        "description": "The server has detected a conflict while processing this request"
      },
      "INVALIDSTRINGMAXLENGTH14": {
        "title": "INVALID_STRING_MAX_LENGTH",
        "properties": {
          "issue": {
            "type": "string",
            "enum": [
              "INVALID_STRING_MAX_LENGTH"
            ]
          },
          "description": {
            "type": "string",
            "enum": [
              "Template Id length should be less than 22 characters."
            ]
          }
        }
      },
      "INVALIDSTRINGMAXLENGTH15": {
        "title": "INVALID_STRING_MAX_LENGTH",
        "properties": {
          "issue": {
            "type": "string",
            "enum": [
              "INVALID_STRING_MAX_LENGTH"
            ]
          },
          "description": {
            "type": "string",
            "enum": [
              "Logo url length should be less than 4000 characters."
            ]
          }
        }
      },
      "InvoicesPaymentsDelete422": {
        "properties": {
          "details": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InvoicespaymentsDelete422Details"
            }
          }
        }
      },
      "INVALIDSTRINGMAXLENGTH16": {
        "title": "INVALID_STRING_MAX_LENGTH",
        "properties": {
          "issue": {
            "type": "string",
            "enum": [
              "INVALID_STRING_MAX_LENGTH"
            ]
          },
          "description": {
            "type": "string",
            "enum": [
              "Invoice note length should be less than 4000 characters."
            ]
          }
        }
      },
      "INVALIDSTRINGMAXLENGTH17": {
        "title": "INVALID_STRING_MAX_LENGTH",
        "properties": {
          "issue": {
            "type": "string",
            "enum": [
              "INVALID_STRING_MAX_LENGTH"
            ]
          },
          "description": {
            "type": "string",
            "enum": [
              "Reference field length should be less than 120 characters."
            ]
          }
        }
      },
      "InvoiceDetailAllOf2": {
        "properties": {
          "invoice_number": {
            "maxLength": 127,
            "type": "string",
            "description": "The invoice number. Default is the number that is auto-incremented number from the last number."
          },
          "invoice_date": {
            "$ref": "#/components/schemas/DateNoTime"
          },
          "payment_term": {
            "$ref": "#/components/schemas/InvoicePaymentTerm"
          },
          "metadata": {
            "$ref": "#/components/schemas/Metadata"
          }
        }
      },
      "INVALIDSTRINGMAXLENGTH18": {
        "title": "INVALID_STRING_MAX_LENGTH",
        "properties": {
          "issue": {
            "type": "string",
            "enum": [
              "INVALID_STRING_MAX_LENGTH"
            ]
          },
          "description": {
            "type": "string",
            "enum": [
              "Terms and Conditions length should be less than 4000 characters."
            ]
          }
        }
      },
      "ContactNameAddressAllOf2": {
        "properties": {
          "name": {
            "$ref": "#/components/schemas/Name"
          },
          "address": {
            "$ref": "#/components/schemas/AddressPortable"
          }
        }
      },
      "INVALIDSTRINGMAXLENGTH19": {
        "title": "INVALID_STRING_MAX_LENGTH",
        "properties": {
          "issue": {
            "type": "string",
            "enum": [
              "INVALID_STRING_MAX_LENGTH"
            ]
          },
          "description": {
            "type": "string",
            "enum": [
              "Additional data length should be less than 4000."
            ]
          }
        }
      },
      "202Response": {
        "title": "Accepted Response",
        "type": "object",
        "properties": {
          "links": {
            "type": "array",
            "description": "An array of request-related [HATEOAS links](/docs/api/reference/api-responses/#hateoas-links)",
            "readOnly": true,
            "items": {
              "$ref": "#/components/schemas/LinkDescription"
            }
          }
        },
        "description": "The HTTP `202 Accepted` response"
      },
      "BillingInfo": {
        "title": "Billing Information",
        "type": "object",
        "description": "The billing information of the invoice recipient. Includes name, address, email, phone, and language",
        "allOf": [
          {
            "$ref": "#/components/schemas/ContactNameAddress"
          },
          {
            "$ref": "#/components/schemas/BillingInfoAllOf2"
          }
        ]
      },
      "NOTSUPPORTED1": {
        "title": "NOT_SUPPORTED",
        "properties": {
          "issue": {
            "type": "string",
            "enum": [
              "NOT_SUPPORTED"
            ]
          },
          "description": {
            "type": "string",
            "enum": [
              "Currency code is not supported. Please provide a valid currency code."
            ]
          }
        }
      },
      "InlineResponse4032": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Error403"
          },
          {
            "$ref": "#/components/schemas/TemplatesDelete403"
          }
        ]
      },
      "InlineResponse4031": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Error403"
          },
          {
            "$ref": "#/components/schemas/TemplatesGet403"
          }
        ]
      },
      "PaymentDetail": {
        "title": "Payment Detail",
        "required": [
          "method"
        ],
        "type": "object",
        "properties": {
          "note": {
            "maxLength": 2000,
            "type": "string",
            "description": "A note associated with an external cash or check payment"
          },
          "shipping_info": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ContactNameAddress"
              }
            ],
            "x-ballerina-name-ignore": "shippingInfo"
          },
          "amount": {
            "$ref": "#/components/schemas/Money"
          },
          "method": {
            "$ref": "#/components/schemas/PaymentMethod"
          },
          "payment_id": {
            "maxLength": 22,
            "type": "string",
            "description": "The ID for a PayPal payment transaction. Required for the `PAYPAL` payment type",
            "x-ballerina-name-ignore": "paymentId"
          },
          "type": {
            "$ref": "#/components/schemas/PaymentType"
          },
          "payment_date": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DateNoTime"
              }
            ],
            "x-ballerina-name-ignore": "paymentDate"
          }
        },
        "description": "The payment details of the invoice. Includes payment type, method, date, discount, and transaction type"
      },
      "MISSINGREQUIREDPARAMETER1": {
        "title": "MISSING_REQUIRED_PARAMETER",
        "properties": {
          "issue": {
            "type": "string",
            "enum": [
              "MISSING_REQUIRED_PARAMETER"
            ]
          },
          "description": {
            "type": "string",
            "enum": [
              "Amount value is missing. Please provide a valid amount."
            ]
          }
        }
      },
      "InvoicePaymentTermAllOf2": {
        "properties": {
          "due_date": {
            "$ref": "#/components/schemas/DateNoTime"
          }
        }
      },
      "MISSINGREQUIREDPARAMETER3": {
        "title": "MISSING_REQUIRED_PARAMETER",
        "properties": {
          "issue": {
            "type": "string",
            "enum": [
              "MISSING_REQUIRED_PARAMETER"
            ]
          },
          "description": {
            "type": "string",
            "enum": [
              "Amount value is missing. Please provide a valid amount."
            ]
          }
        }
      },
      "MISSINGREQUIREDPARAMETER2": {
        "title": "MISSING_REQUIRED_PARAMETER",
        "properties": {
          "issue": {
            "type": "string",
            "enum": [
              "MISSING_REQUIRED_PARAMETER"
            ]
          },
          "description": {
            "type": "string",
            "enum": [
              "Payment method is missing. Please provide a valid payment method."
            ]
          }
        }
      },
      "Error400": {
        "title": "Bad Request Error",
        "type": "object",
        "properties": {
          "debug_id": {
            "type": "string",
            "description": "The PayPal internal ID. Used for correlation purposes",
            "x-ballerina-name-ignore": "debugId"
          },
          "name": {
            "type": "string",
            "enum": [
              "INVALID_REQUEST"
            ]
          },
          "details": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ErrorDetails"
            }
          },
          "links": {
            "maxItems": 10000,
            "minItems": 0,
            "type": "array",
            "description": "An array of request-related [HATEOAS links](https://en.wikipedia.org/wiki/HATEOAS)",
            "items": {
              "$ref": "#/components/schemas/ErrorLinkDescription"
            }
          },
          "message": {
            "type": "string",
            "enum": [
              "Request is not well-formed, syntactically incorrect, or violates schema."
            ]
          }
        },
        "description": "Request is not well-formed, syntactically incorrect, or violates schema"
      },
      "Error401": {
        "title": "Unauthorized Error",
        "type": "object",
        "properties": {
          "debug_id": {
            "type": "string",
            "description": "The PayPal internal ID. Used for correlation purposes",
            "x-ballerina-name-ignore": "debugId"
          },
          "name": {
            "type": "string",
            "enum": [
              "AUTHENTICATION_FAILURE"
            ]
          },
          "details": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ErrorDetails"
            }
          },
          "links": {
            "maxItems": 10000,
            "minItems": 0,
            "type": "array",
            "description": "An array of request-related [HATEOAS links](https://en.wikipedia.org/wiki/HATEOAS)",
            "items": {
              "$ref": "#/components/schemas/ErrorLinkDescription"
            }
          },
          "message": {
            "type": "string",
            "enum": [
              "Authentication failed due to missing authorization header, or invalid authentication credentials."
            ]
          }
        },
        "description": "Authentication failed due to missing Authorization header, or invalid authentication credentials"
      },
      "Error403": {
        "title": "Not Authorized Error",
        "type": "object",
        "properties": {
          "debug_id": {
            "type": "string",
            "description": "The PayPal internal ID. Used for correlation purposes",
            "x-ballerina-name-ignore": "debugId"
          },
          "name": {
            "type": "string",
            "enum": [
              "NOT_AUTHORIZED"
            ]
          },
          "details": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ErrorDetails"
            }
          },
          "links": {
            "maxItems": 10000,
            "minItems": 0,
            "type": "array",
            "description": "An array of request-related [HATEOAS links](https://en.wikipedia.org/wiki/HATEOAS)",
            "items": {
              "$ref": "#/components/schemas/ErrorLinkDescription"
            }
          },
          "message": {
            "type": "string",
            "enum": [
              "Authorization failed due to insufficient permissions."
            ]
          }
        },
        "description": "The client is not authorized to access this resource, although it may have valid credentials. "
      },
      "Error415": {
        "title": "Unsupported Media Type Error",
        "type": "object",
        "properties": {
          "debug_id": {
            "type": "string",
            "description": "The PayPal internal ID. Used for correlation purposes",
            "x-ballerina-name-ignore": "debugId"
          },
          "name": {
            "type": "string",
            "enum": [
              "UNSUPPORTED_MEDIA_TYPE"
            ]
          },
          "details": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ErrorDetails"
            }
          },
          "links": {
            "maxItems": 10000,
            "minItems": 0,
            "type": "array",
            "description": "An array of request-related [HATEOAS links](https://en.wikipedia.org/wiki/HATEOAS)",
            "items": {
              "$ref": "#/components/schemas/ErrorLinkDescription"
            }
          },
          "message": {
            "type": "string",
            "enum": [
              "The server does not support the request payload's media type."
            ]
          }
        },
        "description": "The server does not support the request payload's media type"
      },
      "PhoneDetail": {
        "title": "Phone Detail",
        "required": [
          "phone_type"
        ],
        "type": "object",
        "description": "The phone details. Includes the phone number and type",
        "allOf": [
          {
            "$ref": "#/components/schemas/Phone"
          },
          {
            "$ref": "#/components/schemas/PhoneDetailAllOf2"
          }
        ]
      },
      "AmountSummaryDetail": {
        "title": "Invoice Amount Summary",
        "type": "object",
        "properties": {
          "breakdown": {
            "$ref": "#/components/schemas/AmountWithBreakdown"
          },
          "value": {
            "maxLength": 32,
            "pattern": "^((-?[0-9]+)|(-?([0-9]+)?[.][0-9]+))$",
            "type": "string",
            "description": "The value, which might be:<ul><li>An integer for currencies like `JPY` that are not typically fractional.</li><li>A decimal fraction for currencies like `TND` that are subdivided into thousandths.</li></ul>For the required number of decimal places for a currency code, see [Currency Codes](/docs/integration/direct/rest/currency-codes/)"
          },
          "currency_code": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CurrencyCode"
              }
            ],
            "x-ballerina-name-ignore": "currencyCode"
          }
        },
        "description": "The invoice amount summary of item total, discount, tax total, and shipping"
      },
      "TemplateItemSetting": {
        "title": "Template Item Setting",
        "type": "object",
        "properties": {
          "display_preference": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TemplateDisplayPreference"
              }
            ],
            "x-ballerina-name-ignore": "displayPreference"
          },
          "field_name": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TemplateItemField"
              }
            ],
            "x-ballerina-name-ignore": "fieldName"
          }
        },
        "description": "The template item setting. Sets a template as the default template or edit template"
      },
      "Percentage": {
        "pattern": "^((-?[0-9]+)|(-?([0-9]+)?[.][0-9]+))$",
        "type": "string",
        "description": "The percentage, as a fixed-point, signed decimal number. For example, define a 19.99% interest rate as `19.99`",
        "format": "ppaas_common_percentage_v2"
      },
      "TemplateConfiguration": {
        "title": "Template Configuration",
        "type": "object",
        "properties": {
          "tax_calculated_after_discount": {
            "type": "boolean",
            "description": "Indicates whether the tax is calculated before or after a discount. If `false`, the tax is calculated before a discount. If `true`, the tax is calculated after a discount",
            "default": true,
            "x-ballerina-name-ignore": "taxCalculatedAfterDiscount"
          },
          "partial_payment": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PartialPayment"
              }
            ],
            "x-ballerina-name-ignore": "partialPayment"
          },
          "allow_tip": {
            "type": "boolean",
            "description": "Indicates whether the invoice enables the customer to enter a tip amount during payment. If `true`, the invoice shows a tip amount field so that the customer can enter a tip amount. If `false`, the invoice does not show a tip amount field.<blockquote><strong>Note:</strong> This feature is not available for users in `Hong Kong`, `Taiwan`, `India`, or `Japan`.</blockquote>",
            "default": false,
            "x-ballerina-name-ignore": "allowTip"
          },
          "tax_inclusive": {
            "type": "boolean",
            "description": "Indicates whether the unit price includes tax",
            "default": false,
            "x-ballerina-name-ignore": "taxInclusive"
          }
        },
        "description": "The template configuration details. Includes tax information, tip, and partial payment"
      },
      "TemplateSubtotalSetting": {
        "title": "Template Subtotal Setting",
        "type": "object",
        "properties": {
          "display_preference": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TemplateDisplayPreference"
              }
            ],
            "x-ballerina-name-ignore": "displayPreference"
          },
          "field_name": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TemplateSubtotalField"
              }
            ],
            "x-ballerina-name-ignore": "fieldName"
          }
        },
        "description": "The template subtotal setting. Includes the field name and display preference"
      },
      "CANNOTREMINDINVOICE": {
        "title": "CANNOT_REMIND_INVOICE",
        "properties": {
          "issue": {
            "type": "string",
            "enum": [
              "CANNOT_REMIND_INVOICE"
            ]
          },
          "description": {
            "type": "string",
            "enum": [
              "You cannot remind an invoice which is in DRAFT status. Only UNPAID, SENT and PARTIALLY_PAID invoices can be reminded."
            ]
          }
        }
      },
      "InvoicerInfoAllOf2": {
        "properties": {
          "email_address": {
            "$ref": "#/components/schemas/EmailAddress"
          },
          "phones": {
            "type": "array",
            "description": "An array of invoicer's phone numbers. The invoicer can choose to hide the phone number on the invoice.",
            "items": {
              "$ref": "#/components/schemas/PhoneDetail"
            }
          },
          "website": {
            "maxLength": 2048,
            "type": "string",
            "description": "The invoicer's website.",
            "format": "uri"
          },
          "tax_id": {
            "maxLength": 100,
            "type": "string",
            "description": "The invoicer's tax ID."
          },
          "additional_notes": {
            "maxLength": 400,
            "type": "string",
            "description": "Any additional information. Includes business hours."
          },
          "logo_url": {
            "maxLength": 2000,
            "type": "string",
            "description": "The full URL to an external logo image. The logo image must not be larger than 250 pixels wide by 90 pixels high.",
            "format": "uri"
          }
        }
      },
      "InvoicessearchInvoices400Details": {
        "anyOf": [
          {
            "$ref": "#/components/schemas/INVALIDINTEGERMAXVALUE2"
          },
          {
            "$ref": "#/components/schemas/INVALIDINTEGERMINVALUE2"
          },
          {
            "$ref": "#/components/schemas/INVALIDSTRINGMAXLENGTH54"
          },
          {
            "$ref": "#/components/schemas/INVALIDARRAYMAXITEMS2"
          },
          {
            "$ref": "#/components/schemas/INVALIDSTRINGLENGTH22"
          },
          {
            "$ref": "#/components/schemas/INVALIDSTRINGMAXLENGTH55"
          },
          {
            "$ref": "#/components/schemas/INVALIDPARAMETERSYNTAX15"
          }
        ]
      },
      "Invoicesremind400Details": {
        "anyOf": [
          {
            "$ref": "#/components/schemas/INVALIDSTRINGMAXLENGTH25"
          },
          {
            "$ref": "#/components/schemas/INVALIDARRAYMAXITEMS"
          }
        ]
      },
      "InvoiceStatus": {
        "title": "Invoice Status",
        "type": "string",
        "description": "The status of the invoice",
        "enum": [
          "DRAFT",
          "SENT",
          "SCHEDULED",
          "PAID",
          "MARKED_AS_PAID",
          "CANCELLED",
          "REFUNDED",
          "PARTIALLY_PAID",
          "PARTIALLY_REFUNDED",
          "MARKED_AS_REFUNDED",
          "UNPAID",
          "PAYMENT_PENDING"
        ]
      },
      "InvoicesCreate400": {
        "properties": {
          "details": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Invoicescreate400Details"
            }
          }
        }
      },
      "INVALIDPARAMETERSYNTAX16": {
        "title": "INVALID_PARAMETER_SYNTAX",
        "properties": {
          "issue": {
            "type": "string",
            "enum": [
              "INVALID_PARAMETER_SYNTAX"
            ]
          },
          "description": {
            "type": "string",
            "enum": [
              "the value of a field does not conform to the expected format."
            ]
          }
        }
      },
      "INVALIDPARAMETERSYNTAX17": {
        "title": "INVALID_PARAMETER_SYNTAX",
        "properties": {
          "issue": {
            "type": "string",
            "enum": [
              "INVALID_PARAMETER_SYNTAX"
            ]
          },
          "description": {
            "type": "string",
            "enum": [
              "Value of the field does not conform to the expected format."
            ]
          }
        }
      },
      "INVALIDPARAMETERSYNTAX14": {
        "title": "INVALID_PARAMETER_SYNTAX",
        "properties": {
          "issue": {
            "type": "string",
            "enum": [
              "INVALID_PARAMETER_SYNTAX"
            ]
          },
          "description": {
            "type": "string",
            "enum": [
              "Item Date is invalid."
            ]
          }
        }
      },
      "INVALIDPARAMETERSYNTAX15": {
        "title": "INVALID_PARAMETER_SYNTAX",
        "properties": {
          "issue": {
            "type": "string",
            "enum": [
              "INVALID_PARAMETER_SYNTAX"
            ]
          },
          "description": {
            "type": "string",
            "enum": [
              "the value of a field does not conform to the expected format."
            ]
          }
        }
      },
      "QrConfig": {
        "title": "QR Configuration",
        "type": "object",
        "properties": {
          "width": {
            "maximum": 500,
            "minimum": 150,
            "type": "integer",
            "description": "The width, in pixels, of the QR code image. Value is from `150` to `500`",
            "default": 500
          },
          "action": {
            "maxLength": 7,
            "pattern": "(?i)^(pay|details)$",
            "type": "string",
            "description": "The type of URL for which to generate a QR code. Valid values are `pay` and `details`",
            "default": "pay"
          },
          "height": {
            "maximum": 500,
            "minimum": 150,
            "type": "integer",
            "description": "The height, in pixels, of the QR code image. Value is from `150` to `500`",
            "default": 500
          }
        },
        "description": "The configuration for a QR code"
      },
      "MetadataAllOf2": {
        "properties": {
          "cancel_time": {
            "$ref": "#/components/schemas/DateTime"
          },
          "cancelled_by": {
            "type": "string",
            "description": "The actor who canceled the resource.",
            "readOnly": true
          },
          "first_sent_time": {
            "$ref": "#/components/schemas/DateTime"
          },
          "last_sent_time": {
            "$ref": "#/components/schemas/DateTime"
          },
          "last_sent_by": {
            "type": "string",
            "description": "The email address of the account that last sent the resource.",
            "readOnly": true
          },
          "created_by_flow": {
            "$ref": "#/components/schemas/InvoiceCreationFlow"
          },
          "recipient_view_url": {
            "type": "string",
            "description": "The URL for the invoice payer view hosted on paypal.com.",
            "format": "uri",
            "readOnly": true
          },
          "invoicer_view_url": {
            "type": "string",
            "description": "The URL for the invoice merchant view hosted on paypal.com.",
            "format": "uri",
            "readOnly": true
          }
        }
      },
      "Tax": {
        "title": "Tax",
        "required": [
          "name",
          "percent"
        ],
        "type": "object",
        "properties": {
          "amount": {
            "$ref": "#/components/schemas/Money"
          },
          "name": {
            "maxLength": 100,
            "type": "string",
            "description": "The name of the tax applied on the invoice items"
          },
          "percent": {
            "$ref": "#/components/schemas/Percentage"
          }
        },
        "description": "The tax information. Includes the tax name and tax rate of invoice items. The tax amount is added to the item total"
      },
      "InlineResponse422": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Error422"
          },
          {
            "$ref": "#/components/schemas/UnprocessableEntity"
          }
        ]
      },
      "Templatescreate400Details": {
        "anyOf": [
          {
            "$ref": "#/components/schemas/TEMPLATENAMEALREADYEXISTS"
          },
          {
            "$ref": "#/components/schemas/INVALIDSTRINGLENGTH23"
          },
          {
            "$ref": "#/components/schemas/INVALIDSTRINGLENGTH24"
          },
          {
            "$ref": "#/components/schemas/INVALIDSTRINGLENGTH25"
          },
          {
            "$ref": "#/components/schemas/INVALIDSTRINGMAXLENGTH56"
          },
          {
            "$ref": "#/components/schemas/INVALIDPARAMETERSYNTAX16"
          }
        ]
      },
      "INVALIDPARAMETERSYNTAX12": {
        "title": "INVALID_PARAMETER_SYNTAX",
        "properties": {
          "issue": {
            "type": "string",
            "enum": [
              "INVALID_PARAMETER_SYNTAX"
            ]
          },
          "description": {
            "type": "string",
            "enum": [
              "Due date is invalid."
            ]
          }
        }
      },
      "USERNOTFOUND": {
        "title": "USER_NOT_FOUND",
        "properties": {
          "issue": {
            "type": "string",
            "enum": [
              "USER_NOT_FOUND"
            ]
          },
          "description": {
            "type": "string",
            "enum": [
              "User is not associated with paypal based on invoicer email."
            ]
          }
        }
      },
      "INVALIDPARAMETERSYNTAX13": {
        "title": "INVALID_PARAMETER_SYNTAX",
        "properties": {
          "issue": {
            "type": "string",
            "enum": [
              "INVALID_PARAMETER_SYNTAX"
            ]
          },
          "description": {
            "type": "string",
            "enum": [
              "Invoice date is invalid."
            ]
          }
        }
      },
      "INVALIDPARAMETERSYNTAX10": {
        "title": "INVALID_PARAMETER_SYNTAX",
        "properties": {
          "issue": {
            "type": "string",
            "enum": [
              "INVALID_PARAMETER_SYNTAX"
            ]
          },
          "description": {
            "type": "string",
            "enum": [
              "Country code is invalid."
            ]
          }
        }
      },
      "Template": {
        "title": "Template",
        "type": "object",
        "properties": {
          "settings": {
            "$ref": "#/components/schemas/TemplateSettings"
          },
          "standard_template": {
            "type": "boolean",
            "description": "Indicates whether this template is a invoicer-created custom template. The system generates non-custom templates",
            "readOnly": true,
            "x-ballerina-name-ignore": "standardTemplate"
          },
          "template_info": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TemplateInfo"
              }
            ],
            "x-ballerina-name-ignore": "templateInfo"
          },
          "name": {
            "maxLength": 500,
            "minLength": 1,
            "type": "string",
            "description": "The template name.<blockquote><strong>Note:</strong> The template name must be unique.</blockquote>"
          },
          "unit_of_measure": {
            "allOf": [
              {
                "$ref": "#/components/schemas/UnitOfMeasure"
              }
            ],
            "x-ballerina-name-ignore": "unitOfMeasure"
          },
          "default_template": {
            "type": "boolean",
            "description": "Indicates whether this template is the default template. A invoicer can have one default template",
            "x-ballerina-name-ignore": "defaultTemplate"
          },
          "links": {
            "type": "array",
            "description": "An array of request-related [HATEOAS links](/docs/api/reference/api-responses/#hateoas-links)",
            "readOnly": true,
            "items": {
              "$ref": "#/components/schemas/LinkDescription"
            }
          },
          "id": {
            "maxLength": 30,
            "type": "string",
            "description": "The ID of the template",
            "readOnly": true
          }
        },
        "description": "The template with invoice details to load with all captured fields"
      },
      "INVALIDPARAMETERSYNTAX11": {
        "title": "INVALID_PARAMETER_SYNTAX",
        "properties": {
          "issue": {
            "type": "string",
            "enum": [
              "INVALID_PARAMETER_SYNTAX"
            ]
          },
          "description": {
            "type": "string",
            "enum": [
              "National Number is not valid."
            ]
          }
        }
      },
      "Templatesget403Details": {
        "anyOf": [
          {
            "$ref": "#/components/schemas/PERMISSIONDENIED1"
          }
        ]
      },
      "ErrorDefault": {
        "description": "The default error response",
        "oneOf": [
          {
            "$ref": "#/components/schemas/Error400"
          },
          {
            "$ref": "#/components/schemas/Error401"
          },
          {
            "$ref": "#/components/schemas/Error403"
          },
          {
            "$ref": "#/components/schemas/Error404"
          },
          {
            "$ref": "#/components/schemas/Error409"
          },
          {
            "$ref": "#/components/schemas/Error415"
          },
          {
            "$ref": "#/components/schemas/Error422"
          },
          {
            "$ref": "#/components/schemas/Error500"
          },
          {
            "$ref": "#/components/schemas/Error503"
          }
        ]
      },
      "Invoicescancel400Details": {
        "anyOf": [
          {
            "$ref": "#/components/schemas/INVALIDSTRINGMAXLENGTH26"
          },
          {
            "$ref": "#/components/schemas/INVALIDARRAYMAXITEMS1"
          }
        ]
      },
      "INVALIDSTRINGLENGTH": {
        "title": "INVALID_STRING_LENGTH",
        "properties": {
          "issue": {
            "type": "string",
            "enum": [
              "INVALID_STRING_LENGTH"
            ]
          },
          "description": {
            "type": "string",
            "enum": [
              "National Number length should be between 1 and 14."
            ]
          }
        }
      },
      "TemplatesCreate400": {
        "properties": {
          "details": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Templatescreate400Details"
            }
          }
        }
      },
      "Error422": {
        "title": "Unprocessable Entity Error",
        "type": "object",
        "properties": {
          "debug_id": {
            "type": "string",
            "description": "The PayPal internal ID. Used for correlation purposes",
            "x-ballerina-name-ignore": "debugId"
          },
          "name": {
            "type": "string",
            "enum": [
              "UNPROCESSABLE_ENTITY"
            ]
          },
          "details": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ErrorDetails"
            }
          },
          "links": {
            "maxItems": 10000,
            "minItems": 0,
            "type": "array",
            "description": "An array of request-related [HATEOAS links](https://en.wikipedia.org/wiki/HATEOAS)",
            "items": {
              "$ref": "#/components/schemas/ErrorLinkDescription"
            }
          },
          "message": {
            "type": "string",
            "enum": [
              "The requested action could not be performed, semantically incorrect, or failed business validation."
            ]
          }
        },
        "description": "The requested action cannot be performed and may require interaction with APIs or processes outside of the current request. This is distinct from a 500 response in that there are no systemic problems limiting the API from performing the request"
      },
      "InvoicesgenerateQrCode400Details": {
        "anyOf": [
          {
            "$ref": "#/components/schemas/INVALIDINTEGERMAXVALUE1"
          },
          {
            "$ref": "#/components/schemas/INVALIDINTEGERMINVALUE1"
          },
          {
            "$ref": "#/components/schemas/INVALIDPARAMETERSYNTAX9"
          }
        ]
      },
      "INVALIDSTRINGLENGTH27": {
        "title": "INVALID_STRING_LENGTH",
        "properties": {
          "issue": {
            "type": "string",
            "enum": [
              "INVALID_STRING_LENGTH"
            ]
          },
          "description": {
            "type": "string",
            "enum": [
              "Currency code length should be 3 characters."
            ]
          }
        }
      },
      "INVALIDSTRINGLENGTH26": {
        "title": "INVALID_STRING_LENGTH",
        "properties": {
          "issue": {
            "type": "string",
            "enum": [
              "INVALID_STRING_LENGTH"
            ]
          },
          "description": {
            "type": "string",
            "enum": [
              "Template name length should be between 1 and 500."
            ]
          }
        }
      },
      "INVALIDSTRINGMAXLENGTH1": {
        "title": "INVALID_STRING_MAX_LENGTH",
        "properties": {
          "issue": {
            "type": "string",
            "enum": [
              "INVALID_STRING_MAX_LENGTH"
            ]
          },
          "description": {
            "type": "string",
            "enum": [
              "Address line1 length should be less than 300 characters."
            ]
          }
        }
      },
      "INVALIDSTRINGLENGTH25": {
        "title": "INVALID_STRING_LENGTH",
        "properties": {
          "issue": {
            "type": "string",
            "enum": [
              "INVALID_STRING_LENGTH"
            ]
          },
          "description": {
            "type": "string",
            "enum": [
              "the value of a field is either too short or too long."
            ]
          }
        }
      },
      "INVALIDSTRINGLENGTH24": {
        "title": "INVALID_STRING_LENGTH",
        "properties": {
          "issue": {
            "type": "string",
            "enum": [
              "INVALID_STRING_LENGTH"
            ]
          },
          "description": {
            "type": "string",
            "enum": [
              "Currency code length should be 3 characters."
            ]
          }
        }
      },
      "VALUECANNOTBEZERO1": {
        "title": "VALUE_CANNOT_BE_ZERO",
        "properties": {
          "issue": {
            "type": "string",
            "enum": [
              "VALUE_CANNOT_BE_ZERO"
            ]
          },
          "description": {
            "type": "string",
            "enum": [
              "Refund amount cannot be zero."
            ]
          }
        }
      },
      "Templatesupdate400Details": {
        "anyOf": [
          {
            "$ref": "#/components/schemas/TEMPLATENAMEALREADYEXISTS1"
          },
          {
            "$ref": "#/components/schemas/INVALIDSTRINGLENGTH26"
          },
          {
            "$ref": "#/components/schemas/INVALIDSTRINGLENGTH27"
          },
          {
            "$ref": "#/components/schemas/INVALIDSTRINGLENGTH28"
          },
          {
            "$ref": "#/components/schemas/INVALIDSTRINGMAXLENGTH57"
          },
          {
            "$ref": "#/components/schemas/INVALIDPARAMETERSYNTAX17"
          }
        ]
      },
      "ContactNameAddress": {
        "title": "Contact Information",
        "type": "object",
        "description": "The contact information of the user. Includes name and address",
        "allOf": [
          {
            "$ref": "#/components/schemas/BusinessName"
          },
          {
            "$ref": "#/components/schemas/ContactNameAddressAllOf2"
          }
        ]
      },
      "INVALIDSTRINGLENGTH28": {
        "title": "INVALID_STRING_LENGTH",
        "properties": {
          "issue": {
            "type": "string",
            "enum": [
              "INVALID_STRING_LENGTH"
            ]
          },
          "description": {
            "type": "string",
            "enum": [
              "Value of the field is either too short or too long."
            ]
          }
        }
      },
      "PaymentTermType": {
        "title": "Payment Term Type",
        "type": "string",
        "description": "The payment term. Payment can be due upon receipt, a specified date, or in a set number of days",
        "enum": [
          "DUE_ON_RECEIPT",
          "DUE_ON_DATE_SPECIFIED",
          "NET_10",
          "NET_15",
          "NET_30",
          "NET_45",
          "NET_60",
          "NET_90",
          "NO_DUE_DATE"
        ]
      },
      "Invoicesrefunds400Details": {
        "anyOf": [
          {
            "$ref": "#/components/schemas/MISSINGREQUIREDPARAMETER2"
          },
          {
            "$ref": "#/components/schemas/INVALIDREFUNDMETHOD"
          },
          {
            "$ref": "#/components/schemas/INVALIDPARAMETERSYNTAX7"
          },
          {
            "$ref": "#/components/schemas/INVALIDSTRINGLENGTH11"
          },
          {
            "$ref": "#/components/schemas/NOTSUPPORTED1"
          },
          {
            "$ref": "#/components/schemas/MISSINGREQUIREDPARAMETER3"
          },
          {
            "$ref": "#/components/schemas/INVALIDPARAMETERSYNTAX8"
          },
          {
            "$ref": "#/components/schemas/INVALIDSTRINGMAXLENGTH28"
          },
          {
            "$ref": "#/components/schemas/VALUECANNOTBEZERO1"
          },
          {
            "$ref": "#/components/schemas/INVALIDINTEGERVALUE1"
          },
          {
            "$ref": "#/components/schemas/INVALIDDECIMALVALUE1"
          }
        ]
      },
      "AddressPortable": {
        "title": "Portable Postal Address (Medium-Grained)",
        "required": [
          "country_code"
        ],
        "type": "object",
        "properties": {
          "country_code": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CountryCode"
              }
            ],
            "x-ballerina-name-ignore": "countryCode"
          },
          "admin_area_1": {
            "maxLength": 300,
            "type": "string",
            "description": "The highest level sub-division in a country, which is usually a province, state, or ISO-3166-2 subdivision. Format for postal delivery. For example, `CA` and not `California`. Value, by country, is:<ul><li>UK. A county.</li><li>US. A state.</li><li>Canada. A province.</li><li>Japan. A prefecture.</li><li>Switzerland. A kanton.</li></ul>",
            "x-ballerina-name-ignore": "adminArea1"
          },
          "address_line_1": {
            "maxLength": 300,
            "type": "string",
            "description": "The first line of the address. For example, number or street. For example, `173 Drury Lane`. Required for data entry and compliance and risk checks. Must contain the full address",
            "x-ballerina-name-ignore": "addressLine1"
          },
          "admin_area_3": {
            "maxLength": 100,
            "type": "string",
            "description": "A sub-locality, suburb, neighborhood, or district. Smaller than `admin_area_level_2`. Value is:<ul><li>Brazil. Suburb, bairro, or neighborhood.</li><li>India. Sub-locality or district. Street name information is not always available but a sub-locality or district can be a very small area.</li></ul>",
            "x-ballerina-name-ignore": "adminArea3"
          },
          "address_details": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AddressDetails"
              }
            ],
            "x-ballerina-name-ignore": "addressDetails"
          },
          "admin_area_2": {
            "maxLength": 120,
            "type": "string",
            "description": "A city, town, or village. Smaller than `admin_area_level_1`",
            "x-ballerina-name-ignore": "adminArea2"
          },
          "address_line_3": {
            "maxLength": 100,
            "type": "string",
            "description": "The third line of the address, if needed. For example, a street complement for Brazil, direction text, such as `next to Walmart`, or a landmark in an Indian address",
            "x-ballerina-name-ignore": "addressLine3"
          },
          "address_line_2": {
            "maxLength": 300,
            "type": "string",
            "description": "The second line of the address. For example, suite or apartment number",
            "x-ballerina-name-ignore": "addressLine2"
          },
          "admin_area_4": {
            "maxLength": 100,
            "type": "string",
            "description": "The neighborhood, ward, or district. Smaller than `admin_area_level_3` or `sub_locality`. Value is:<ul><li>The postal sorting code for Guernsey and many French territories, such as French Guiana.</li><li>The fine-grained administrative levels in China.</li></ul>",
            "x-ballerina-name-ignore": "adminArea4"
          },
          "postal_code": {
            "maxLength": 60,
            "type": "string",
            "description": "The postal code, which is the zip code or equivalent. Typically required for countries with a postal code or an equivalent. See [postal code](https://en.wikipedia.org/wiki/Postal_code)",
            "x-ballerina-name-ignore": "postalCode"
          }
        },
        "description": "The portable international postal address. Maps to [AddressValidationMetadata](https://github.com/googlei18n/libaddressinput/wiki/AddressValidationMetadata) and HTML 5.1 [Autofilling form controls: the autocomplete attribute](https://www.w3.org/TR/html51/sec-forms.html#autofilling-form-controls-the-autocomplete-attribute)"
      },
      "TemplateSettings": {
        "title": "Template Settings",
        "type": "object",
        "properties": {
          "template_item_settings": {
            "type": "array",
            "description": "The template item headers display preference",
            "items": {
              "$ref": "#/components/schemas/TemplateItemSetting"
            },
            "x-ballerina-name-ignore": "templateItemSettings"
          },
          "template_subtotal_settings": {
            "type": "array",
            "description": "The template subtotal headers display preference",
            "items": {
              "$ref": "#/components/schemas/TemplateSubtotalSetting"
            },
            "x-ballerina-name-ignore": "templateSubtotalSettings"
          }
        },
        "description": "The template settings. Sets a template as the default template or edit template"
      },
      "InvoicesSearchInvoices400": {
        "properties": {
          "details": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InvoicessearchInvoices400Details"
            }
          }
        }
      },
      "InvoicesRefunds400": {
        "properties": {
          "details": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Invoicesrefunds400Details"
            }
          }
        }
      },
      "PhoneType": {
        "title": "Phone Type",
        "type": "string",
        "description": "The phone type",
        "enum": [
          "FAX",
          "HOME",
          "MOBILE",
          "OTHER",
          "PAGER"
        ]
      },
      "INVALIDSTRINGMAXLENGTH7": {
        "title": "INVALID_STRING_MAX_LENGTH",
        "properties": {
          "issue": {
            "type": "string",
            "enum": [
              "INVALID_STRING_MAX_LENGTH"
            ]
          },
          "description": {
            "type": "string",
            "enum": [
              "Minimum due amount length should be less than 32 characters."
            ]
          }
        }
      },
      "InvoicesCancel422": {
        "properties": {
          "details": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Invoicescancel422Details"
            }
          }
        }
      },
      "PaymentMethod": {
        "title": "Payment Method",
        "type": "string",
        "description": "The payment mode or method through which the invoicer can accept the payments",
        "enum": [
          "BANK_TRANSFER",
          "CASH",
          "CHECK",
          "CREDIT_CARD",
          "DEBIT_CARD",
          "PAYPAL",
          "WIRE_TRANSFER",
          "OTHER"
        ]
      },
      "INVALIDSTRINGMAXLENGTH6": {
        "title": "INVALID_STRING_MAX_LENGTH",
        "properties": {
          "issue": {
            "type": "string",
            "enum": [
              "INVALID_STRING_MAX_LENGTH"
            ]
          },
          "description": {
            "type": "string",
            "enum": [
              "Business name length should be less than 300 characters."
            ]
          }
        }
      },
      "INVALIDSTRINGMAXLENGTH9": {
        "title": "INVALID_STRING_MAX_LENGTH",
        "properties": {
          "issue": {
            "type": "string",
            "enum": [
              "INVALID_STRING_MAX_LENGTH"
            ]
          },
          "description": {
            "type": "string",
            "enum": [
              "Tax name length should be less than 100."
            ]
          }
        }
      },
      "INVALIDSTRINGMAXLENGTH8": {
        "title": "INVALID_STRING_MAX_LENGTH",
        "properties": {
          "issue": {
            "type": "string",
            "enum": [
              "INVALID_STRING_MAX_LENGTH"
            ]
          },
          "description": {
            "type": "string",
            "enum": [
              "Admin area2 length should be less than 300 characters."
            ]
          }
        }
      },
      "INVALIDSTRINGMAXLENGTH3": {
        "title": "INVALID_STRING_MAX_LENGTH",
        "properties": {
          "issue": {
            "type": "string",
            "enum": [
              "INVALID_STRING_MAX_LENGTH"
            ]
          },
          "description": {
            "type": "string",
            "enum": [
              "Given name length should be less than 140 characters."
            ]
          }
        }
      },
      "INVALIDSTRINGLENGTH23": {
        "title": "INVALID_STRING_LENGTH",
        "properties": {
          "issue": {
            "type": "string",
            "enum": [
              "INVALID_STRING_LENGTH"
            ]
          },
          "description": {
            "type": "string",
            "enum": [
              "Template name length should be between 1 and 500."
            ]
          }
        }
      },
      "RecipientInfo": {
        "title": "Recipient Information",
        "type": "object",
        "properties": {
          "shipping_info": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ContactNameAddress"
              }
            ],
            "x-ballerina-name-ignore": "shippingInfo"
          },
          "billing_info": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BillingInfo"
              }
            ],
            "x-ballerina-name-ignore": "billingInfo"
          }
        },
        "description": "The billing and shipping information. Includes name, email, address, phone, and language"
      },
      "INVALIDSTRINGMAXLENGTH2": {
        "title": "INVALID_STRING_MAX_LENGTH",
        "properties": {
          "issue": {
            "type": "string",
            "enum": [
              "INVALID_STRING_MAX_LENGTH"
            ]
          },
          "description": {
            "type": "string",
            "enum": [
              "Custom label length should be less than 50 characters."
            ]
          }
        }
      },
      "INVALIDSTRINGLENGTH22": {
        "title": "INVALID_STRING_LENGTH",
        "properties": {
          "issue": {
            "type": "string",
            "enum": [
              "INVALID_STRING_LENGTH"
            ]
          },
          "description": {
            "type": "string",
            "enum": [
              "the value of a field is either too short or too long."
            ]
          }
        }
      },
      "Detail": {
        "title": "Invoice_Detail",
        "required": [
          "currency_code"
        ],
        "properties": {
          "reference": {
            "maxLength": 120,
            "type": "string",
            "description": "The reference data. Includes a post office (PO) number."
          },
          "currency_code": {
            "$ref": "#/components/schemas/CurrencyCode"
          },
          "note": {
            "maxLength": 4000,
            "type": "string",
            "description": "A note to the invoice recipient. Also appears on the invoice notification email."
          },
          "terms_and_conditions": {
            "maxLength": 4000,
            "type": "string",
            "description": "The general terms of the invoice. Can include return or cancellation policy and other terms and conditions."
          },
          "memo": {
            "maxLength": 500,
            "type": "string",
            "description": "A private bookkeeping memo for the user."
          },
          "attachments": {
            "maximum": 5,
            "type": "array",
            "description": "An array of PayPal IDs for the files that are attached to an invoice.",
            "items": {
              "$ref": "#/components/schemas/FileReference"
            }
          }
        },
        "description": "The details of the invoice like notes, terms and conditions, memo, attachments"
      },
      "INVALIDSTRINGMAXLENGTH5": {
        "title": "INVALID_STRING_MAX_LENGTH",
        "properties": {
          "issue": {
            "type": "string",
            "enum": [
              "INVALID_STRING_MAX_LENGTH"
            ]
          },
          "description": {
            "type": "string",
            "enum": [
              "Surname length should be less than 140 characters."
            ]
          }
        }
      },
      "INVALIDSTRINGLENGTH21": {
        "title": "INVALID_STRING_LENGTH",
        "properties": {
          "issue": {
            "type": "string",
            "enum": [
              "INVALID_STRING_LENGTH"
            ]
          },
          "description": {
            "type": "string",
            "enum": [
              "Invoice date is invalid."
            ]
          }
        }
      },
      "INVALIDSTRINGMAXLENGTH4": {
        "title": "INVALID_STRING_MAX_LENGTH",
        "properties": {
          "issue": {
            "type": "string",
            "enum": [
              "INVALID_STRING_MAX_LENGTH"
            ]
          },
          "description": {
            "type": "string",
            "enum": [
              "Admin area1 length should be less than 300 characters."
            ]
          }
        }
      },
      "INVALIDSTRINGLENGTH20": {
        "title": "INVALID_STRING_LENGTH",
        "properties": {
          "issue": {
            "type": "string",
            "enum": [
              "INVALID_STRING_LENGTH"
            ]
          },
          "description": {
            "type": "string",
            "enum": [
              "Email address length should be between 3 and 254."
            ]
          }
        }
      },
      "INVALIDSTRINGLENGTH16": {
        "title": "INVALID_STRING_LENGTH",
        "properties": {
          "issue": {
            "type": "string",
            "enum": [
              "INVALID_STRING_LENGTH"
            ]
          },
          "description": {
            "type": "string",
            "enum": [
              "Country code length should be 2 characters."
            ]
          }
        }
      },
      "INVALIDSTRINGMAXLENGTH53": {
        "title": "INVALID_STRING_MAX_LENGTH",
        "properties": {
          "issue": {
            "type": "string",
            "enum": [
              "INVALID_STRING_MAX_LENGTH"
            ]
          },
          "description": {
            "type": "string",
            "enum": [
              "Shipping Tax name length should be less than 100 characters."
            ]
          }
        }
      },
      "PERMISSIONDENIED": {
        "title": "PERMISSION_DENIED",
        "properties": {
          "issue": {
            "type": "string",
            "enum": [
              "PERMISSION_DENIED"
            ]
          },
          "description": {
            "type": "string",
            "enum": [
              "The requested invoice is not associated with the requested user."
            ]
          }
        }
      },
      "INVALIDARRAYMAXITEMS": {
        "title": "INVALID_ARRAY_MAX_ITEMS",
        "properties": {
          "issue": {
            "type": "string",
            "enum": [
              "INVALID_ARRAY_MAX_ITEMS"
            ]
          },
          "description": {
            "type": "string",
            "enum": [
              "Only maximum of 100 email address is supported in additional recipients."
            ]
          }
        }
      },
      "INVALIDSTRINGLENGTH15": {
        "title": "INVALID_STRING_LENGTH",
        "properties": {
          "issue": {
            "type": "string",
            "enum": [
              "INVALID_STRING_LENGTH"
            ]
          },
          "description": {
            "type": "string",
            "enum": [
              "Attachment reference url length should be between 1 and 2000."
            ]
          }
        }
      },
      "INVALIDSTRINGMAXLENGTH54": {
        "title": "INVALID_STRING_MAX_LENGTH",
        "properties": {
          "issue": {
            "type": "string",
            "enum": [
              "INVALID_STRING_MAX_LENGTH"
            ]
          },
          "description": {
            "type": "string",
            "enum": [
              "the value of a field is too long."
            ]
          }
        }
      },
      "ErrorLinkDescription": {
        "title": "Link Description",
        "required": [
          "href",
          "rel"
        ],
        "type": "object",
        "properties": {
          "method": {
            "maxLength": 7,
            "minLength": 3,
            "pattern": "^[A-Z]*$",
            "type": "string",
            "description": "The HTTP method required to make the related call",
            "enum": [
              "CONNECT",
              "DELETE",
              "GET",
              "HEAD",
              "OPTIONS",
              "PATCH",
              "POST",
              "PUT"
            ]
          },
          "rel": {
            "maxLength": 100,
            "minLength": 0,
            "pattern": "^.*$",
            "type": "string",
            "description": "The [link relation type](https://tools.ietf.org/html/rfc5988#section-4), which serves as an ID for a link that unambiguously describes the semantics of the link. See [Link Relations](https://www.iana.org/assignments/link-relations/link-relations.xhtml)"
          },
          "href": {
            "maxLength": 20000,
            "minLength": 0,
            "pattern": "^.*$",
            "type": "string",
            "description": "The complete target URL. To make the related call, combine the method with this [URI Template-formatted](https://tools.ietf.org/html/rfc6570) link. For pre-processing, include the `$`, `(`, and `)` characters. The `href` is the key HATEOAS component that links a completed call with a subsequent call"
          }
        },
        "description": "The request-related [HATEOAS link](/api/rest/responses/#hateoas-links) information"
      },
      "INVALIDSTRINGLENGTH14": {
        "title": "INVALID_STRING_LENGTH",
        "properties": {
          "issue": {
            "type": "string",
            "enum": [
              "INVALID_STRING_LENGTH"
            ]
          },
          "description": {
            "type": "string",
            "enum": [
              "Item quantity length should be 1 and 14."
            ]
          }
        }
      },
      "INVALIDSTRINGMAXLENGTH55": {
        "title": "INVALID_STRING_MAX_LENGTH",
        "properties": {
          "issue": {
            "type": "string",
            "enum": [
              "INVALID_STRING_MAX_LENGTH"
            ]
          },
          "description": {
            "type": "string",
            "enum": [
              "the value of a field is too long."
            ]
          }
        }
      },
      "INVALIDSTRINGLENGTH13": {
        "title": "INVALID_STRING_LENGTH",
        "properties": {
          "issue": {
            "type": "string",
            "enum": [
              "INVALID_STRING_LENGTH"
            ]
          },
          "description": {
            "type": "string",
            "enum": [
              "Language is invalid."
            ]
          }
        }
      },
      "INVALIDSTRINGMAXLENGTH56": {
        "title": "INVALID_STRING_MAX_LENGTH",
        "properties": {
          "issue": {
            "type": "string",
            "enum": [
              "INVALID_STRING_MAX_LENGTH"
            ]
          },
          "description": {
            "type": "string",
            "enum": [
              "Value of the field is too long."
            ]
          }
        }
      },
      "INVALIDSTRINGMAXLENGTH57": {
        "title": "INVALID_STRING_MAX_LENGTH",
        "properties": {
          "issue": {
            "type": "string",
            "enum": [
              "INVALID_STRING_MAX_LENGTH"
            ]
          },
          "description": {
            "type": "string",
            "enum": [
              "Value of the field is too long."
            ]
          }
        }
      },
      "INVALIDSTRINGLENGTH19": {
        "title": "INVALID_STRING_LENGTH",
        "properties": {
          "issue": {
            "type": "string",
            "enum": [
              "INVALID_STRING_LENGTH"
            ]
          },
          "description": {
            "type": "string",
            "enum": [
              "country code length should be between 1 and 3."
            ]
          }
        }
      },
      "INVALIDSTRINGLENGTH18": {
        "title": "INVALID_STRING_LENGTH",
        "properties": {
          "issue": {
            "type": "string",
            "enum": [
              "INVALID_STRING_LENGTH"
            ]
          },
          "description": {
            "type": "string",
            "enum": [
              "Attachment id length should be between 1 and 255."
            ]
          }
        }
      },
      "INVALIDSTRINGLENGTH17": {
        "title": "INVALID_STRING_LENGTH",
        "properties": {
          "issue": {
            "type": "string",
            "enum": [
              "INVALID_STRING_LENGTH"
            ]
          },
          "description": {
            "type": "string",
            "enum": [
              "Currency code length should be 3 characters."
            ]
          }
        }
      },
      "InvoicerInfo": {
        "title": "Invoicer Information",
        "type": "object",
        "description": "The invoicer business information that appears on the invoice",
        "allOf": [
          {
            "$ref": "#/components/schemas/ContactNameAddress"
          },
          {
            "$ref": "#/components/schemas/InvoicerInfoAllOf2"
          }
        ]
      },
      "INVALIDARRAYMAXITEMS2": {
        "title": "INVALID_ARRAY_MAX_ITEMS",
        "properties": {
          "issue": {
            "type": "string",
            "enum": [
              "INVALID_ARRAY_MAX_ITEMS"
            ]
          },
          "description": {
            "type": "string",
            "enum": [
              "the number of items in an array parameter is too large."
            ]
          }
        }
      },
      "Templatesupdate422Details": {
        "anyOf": [
          {
            "$ref": "#/components/schemas/CANNOTCANCELDRAFTINVOICE2"
          }
        ]
      },
      "DateRange": {
        "title": "Date Range",
        "required": [
          "end",
          "start"
        ],
        "type": "object",
        "properties": {
          "start": {
            "$ref": "#/components/schemas/DateNoTime"
          },
          "end": {
            "$ref": "#/components/schemas/DateNoTime"
          }
        },
        "description": "The date range. Filters invoices by creation date, invoice date, due date, and payment date"
      },
      "Phone": {
        "title": "Phone",
        "required": [
          "country_code",
          "national_number"
        ],
        "type": "object",
        "properties": {
          "country_code": {
            "maxLength": 3,
            "minLength": 1,
            "pattern": "^[0-9]{1,3}?$",
            "type": "string",
            "description": "The country calling code (CC), in its canonical international [E.164 numbering plan format](https://www.itu.int/rec/T-REC-E.164/en). The combined length of the CC and the national number must not be greater than 15 digits. The national number consists of a national destination code (NDC) and subscriber number (SN)",
            "x-ballerina-name-ignore": "countryCode"
          },
          "extension_number": {
            "maxLength": 15,
            "minLength": 1,
            "pattern": "^[0-9]{1,15}?$",
            "type": "string",
            "description": "The extension number",
            "x-ballerina-name-ignore": "extensionNumber"
          },
          "national_number": {
            "maxLength": 14,
            "minLength": 1,
            "pattern": "^[0-9]{1,14}?$",
            "type": "string",
            "description": "The national number, in its canonical international [E.164 numbering plan format](https://www.itu.int/rec/T-REC-E.164/en). The combined length of the country calling code (CC) and the national number must not be greater than 15 digits. The national number consists of a national destination code (NDC) and subscriber number (SN)",
            "x-ballerina-name-ignore": "nationalNumber"
          }
        },
        "description": "The phone number, in its canonical international [E.164 numbering plan format](https://www.itu.int/rec/T-REC-E.164/en)"
      },
      "INVALIDARRAYMAXITEMS1": {
        "title": "INVALID_ARRAY_MAX_ITEMS",
        "properties": {
          "issue": {
            "type": "string",
            "enum": [
              "INVALID_ARRAY_MAX_ITEMS"
            ]
          },
          "description": {
            "type": "string",
            "enum": [
              "Only maximum of 100 email address is supported in additional recipients."
            ]
          }
        }
      },
      "TEMPLATENAMEALREADYEXISTS1": {
        "title": "TEMPLATE_NAME_ALREADY_EXISTS",
        "properties": {
          "issue": {
            "type": "string",
            "enum": [
              "TEMPLATE_NAME_ALREADY_EXISTS"
            ]
          },
          "description": {
            "type": "string",
            "enum": [
              "Template name already exists."
            ]
          }
        }
      },
      "AmountRange": {
        "title": "Amount Range",
        "required": [
          "lower_amount",
          "upper_amount"
        ],
        "type": "object",
        "properties": {
          "upper_amount": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Money"
              }
            ],
            "x-ballerina-name-ignore": "upperAmount"
          },
          "lower_amount": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Money"
              }
            ],
            "x-ballerina-name-ignore": "lowerAmount"
          }
        },
        "description": "The amount range"
      },
      "TemplatesCreate422": {
        "properties": {
          "details": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Templatescreate422Details"
            }
          }
        }
      },
      "PaymentType": {
        "title": "Payment Type",
        "type": "string",
        "description": "The payment type. Can be PayPal or an external payment. Includes cash or a check",
        "enum": [
          "PAYPAL",
          "EXTERNAL"
        ]
      },
      "CountryCode": {
        "maxLength": 2,
        "minLength": 2,
        "pattern": "^([A-Z]{2}|C2)$",
        "type": "string",
        "description": "The [two-character ISO 3166-1 code](/docs/integration/direct/rest/country-codes/) that identifies the country or region.<blockquote><strong>Note:</strong> The country code for Great Britain is <code>GB</code> and not <code>UK</code> as used in the top-level domain names for that country. Use the `C2` country code for China worldwide for comparable uncontrolled price (CUP) method, bank card, and cross-border transactions.</blockquote>",
        "format": "ppaas_common_country_code_v2"
      },
      "INVALIDSTRINGLENGTH12": {
        "title": "INVALID_STRING_LENGTH",
        "properties": {
          "issue": {
            "type": "string",
            "enum": [
              "INVALID_STRING_LENGTH"
            ]
          },
          "description": {
            "type": "string",
            "enum": [
              "National Number length should be between 1 and 14."
            ]
          }
        }
      },
      "INVALIDSTRINGLENGTH11": {
        "title": "INVALID_STRING_LENGTH",
        "properties": {
          "issue": {
            "type": "string",
            "enum": [
              "INVALID_STRING_LENGTH"
            ]
          },
          "description": {
            "type": "string",
            "enum": [
              "Currency code length should be 3 characters."
            ]
          }
        }
      },
      "INVALIDSTRINGLENGTH10": {
        "title": "INVALID_STRING_LENGTH",
        "properties": {
          "issue": {
            "type": "string",
            "enum": [
              "INVALID_STRING_LENGTH"
            ]
          },
          "description": {
            "type": "string",
            "enum": [
              "Currency code length should be 3 characters."
            ]
          }
        }
      },
      "INVALIDSTRINGMAXLENGTH42": {
        "title": "INVALID_STRING_MAX_LENGTH",
        "properties": {
          "issue": {
            "type": "string",
            "enum": [
              "INVALID_STRING_MAX_LENGTH"
            ]
          },
          "description": {
            "type": "string",
            "enum": [
              "Item name length should be less than 200 characters."
            ]
          }
        }
      },
      "INVALIDSTRINGMAXLENGTH43": {
        "title": "INVALID_STRING_MAX_LENGTH",
        "properties": {
          "issue": {
            "type": "string",
            "enum": [
              "INVALID_STRING_MAX_LENGTH"
            ]
          },
          "description": {
            "type": "string",
            "enum": [
              "Template Id length should be less than 22 characters."
            ]
          }
        }
      },
      "INVALIDSTRINGMAXLENGTH44": {
        "title": "INVALID_STRING_MAX_LENGTH",
        "properties": {
          "issue": {
            "type": "string",
            "enum": [
              "INVALID_STRING_MAX_LENGTH"
            ]
          },
          "description": {
            "type": "string",
            "enum": [
              "Logo url length should be less than 4000 characters."
            ]
          }
        }
      },
      "SearchData": {
        "title": "Search Data",
        "type": "object",
        "properties": {
          "payment_date_range": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DateTimeRange"
              }
            ],
            "x-ballerina-name-ignore": "paymentDateRange"
          },
          "recipient_last_name": {
            "maxLength": 140,
            "type": "string",
            "description": "Filters the search by the recipient last name",
            "x-ballerina-name-ignore": "recipientLastName"
          },
          "recipient_first_name": {
            "maxLength": 140,
            "type": "string",
            "description": "Filters the search by the recipient first name",
            "x-ballerina-name-ignore": "recipientFirstName"
          },
          "recipient_email": {
            "maxLength": 254,
            "type": "string",
            "description": "Filters the search by the email address",
            "x-ballerina-name-ignore": "recipientEmail"
          },
          "invoice_date_range": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DateRange"
              }
            ],
            "x-ballerina-name-ignore": "invoiceDateRange"
          },
          "memo": {
            "maxLength": 500,
            "type": "string",
            "description": "A private bookkeeping memo for the user"
          },
          "currency_code": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CurrencyCode"
              }
            ],
            "x-ballerina-name-ignore": "currencyCode"
          },
          "reference": {
            "maxLength": 120,
            "type": "string",
            "description": "The reference data, such as a PO number"
          },
          "total_amount_range": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AmountRange"
              }
            ],
            "x-ballerina-name-ignore": "totalAmountRange"
          },
          "archived": {
            "type": "boolean",
            "description": "Indicates whether to list merchant-archived invoices in the response. Value is:<ul><li><code>true</code>. Response lists only merchant-archived invoices.</li><li><code>false</code>. Response lists only unarchived invoices.</li><li><code>null</code>. Response lists all invoices.</li></ul>"
          },
          "due_date_range": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DateRange"
              }
            ],
            "x-ballerina-name-ignore": "dueDateRange"
          },
          "creation_date_range": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DateTimeRange"
              }
            ],
            "x-ballerina-name-ignore": "creationDateRange"
          },
          "recipient_business_name": {
            "maxLength": 300,
            "type": "string",
            "description": "Filters the search by the recipient business name",
            "x-ballerina-name-ignore": "recipientBusinessName"
          },
          "fields": {
            "type": "array",
            "description": "A CSV file of fields to return for the user, if available. Because the invoice object can be very large, field filtering is required. Valid collection fields are <code>items</code>, <code>payments</code>, <code>refunds</code>, <code>additional_recipients_info</code>, and <code>attachments</code>",
            "items": {
              "type": "string",
              "description": "The name of the field."
            }
          },
          "invoice_number": {
            "maxLength": 25,
            "type": "string",
            "description": "Filters the search by the invoice number",
            "x-ballerina-name-ignore": "invoiceNumber"
          },
          "status": {
            "maxItems": 5,
            "type": "array",
            "description": "An array of status values",
            "items": {
              "$ref": "#/components/schemas/InvoiceStatus"
            }
          }
        },
        "description": "The invoice search parameters"
      },
      "Invoicespayments422Details": {
        "anyOf": [
          {
            "$ref": "#/components/schemas/PAYMENTAMOUNTGREATERTHANAMOUNTDUE"
          },
          {
            "$ref": "#/components/schemas/INVALIDINVOICETYPE"
          },
          {
            "$ref": "#/components/schemas/CANNOTPROCESSPAYMENTS"
          }
        ]
      },
      "INVALIDSTRINGMAXLENGTH45": {
        "title": "INVALID_STRING_MAX_LENGTH",
        "properties": {
          "issue": {
            "type": "string",
            "enum": [
              "INVALID_STRING_MAX_LENGTH"
            ]
          },
          "description": {
            "type": "string",
            "enum": [
              "Invoice note length should be less than 4000 characters."
            ]
          }
        }
      },
      "INVALIDSTRINGMAXLENGTH46": {
        "title": "INVALID_STRING_MAX_LENGTH",
        "properties": {
          "issue": {
            "type": "string",
            "enum": [
              "INVALID_STRING_MAX_LENGTH"
            ]
          },
          "description": {
            "type": "string",
            "enum": [
              "Reference field length should be less than 120 characters."
            ]
          }
        }
      },
      "INVALIDSTRINGMAXLENGTH47": {
        "title": "INVALID_STRING_MAX_LENGTH",
        "properties": {
          "issue": {
            "type": "string",
            "enum": [
              "INVALID_STRING_MAX_LENGTH"
            ]
          },
          "description": {
            "type": "string",
            "enum": [
              "Terms and Conditions length should be less than 4000 characters."
            ]
          }
        }
      },
      "INVALIDSTRINGMAXLENGTH48": {
        "title": "INVALID_STRING_MAX_LENGTH",
        "properties": {
          "issue": {
            "type": "string",
            "enum": [
              "INVALID_STRING_MAX_LENGTH"
            ]
          },
          "description": {
            "type": "string",
            "enum": [
              "Additional data length should be less than 4000."
            ]
          }
        }
      },
      "INVALIDINVOICETYPE": {
        "title": "INVALID_INVOICE_TYPE",
        "properties": {
          "issue": {
            "type": "string",
            "enum": [
              "INVALID_INVOICE_TYPE"
            ]
          },
          "description": {
            "type": "string",
            "enum": [
              "The invoice type is not valid for paying an invoice."
            ]
          }
        }
      },
      "INVALIDSTRINGMAXLENGTH49": {
        "title": "INVALID_STRING_MAX_LENGTH",
        "properties": {
          "issue": {
            "type": "string",
            "enum": [
              "INVALID_STRING_MAX_LENGTH"
            ]
          },
          "description": {
            "type": "string",
            "enum": [
              "Additional information value length should be less than 40 characters."
            ]
          }
        }
      },
      "INVALIDDECIMALVALUE1": {
        "title": "INVALID_DECIMAL_VALUE",
        "properties": {
          "issue": {
            "type": "string",
            "enum": [
              "INVALID_DECIMAL_VALUE"
            ]
          },
          "description": {
            "type": "string",
            "enum": [
              "Refund amount value is invalid. Can have non-negative value with maximum 7 digits and upto 2 fractions."
            ]
          }
        }
      },
      "TemplateInfo": {
        "title": "Template Information",
        "type": "object",
        "properties": {
          "amount": {
            "$ref": "#/components/schemas/AmountSummaryDetail"
          },
          "due_amount": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Money"
              }
            ],
            "x-ballerina-name-ignore": "dueAmount"
          },
          "configuration": {
            "$ref": "#/components/schemas/TemplateConfiguration"
          },
          "invoicer": {
            "$ref": "#/components/schemas/InvoicerInfo"
          },
          "detail": {
            "$ref": "#/components/schemas/TemplateDetail"
          },
          "primary_recipients": {
            "maxItems": 100,
            "type": "array",
            "description": "The billing and shipping information. Includes name, email, address, phone, and language",
            "items": {
              "$ref": "#/components/schemas/RecipientInfo"
            },
            "x-ballerina-name-ignore": "primaryRecipients"
          },
          "additional_recipients": {
            "maxItems": 100,
            "type": "array",
            "description": "An array of one or more CC: emails to which notifications are sent. If you omit this parameter, a notification is sent to all CC: email addresses that are part of the invoice.<blockquote><strong>Note:</strong> Valid values are email addresses in the `additional_recipients` value associated with the invoice.</blockquote>",
            "items": {
              "$ref": "#/components/schemas/EmailAddress"
            },
            "x-ballerina-name-ignore": "additionalRecipients"
          },
          "items": {
            "maxItems": 100,
            "type": "array",
            "description": "An array of invoice line-item information",
            "items": {
              "$ref": "#/components/schemas/Item"
            }
          }
        },
        "description": "The template details. Includes invoicer business information, invoice recipients, items, and configuration"
      },
      "InlineResponse4221": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Error422"
          },
          {
            "$ref": "#/components/schemas/InvoicesRemind422"
          }
        ]
      },
      "InlineResponse4224": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Error422"
          },
          {
            "$ref": "#/components/schemas/InvoicesPaymentsDelete422"
          }
        ]
      },
      "InvoicesCancel400": {
        "properties": {
          "details": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Invoicescancel400Details"
            }
          }
        }
      },
      "InlineResponse4225": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Error422"
          },
          {
            "$ref": "#/components/schemas/InvoicesRefunds422"
          }
        ]
      },
      "InlineResponse4222": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Error422"
          },
          {
            "$ref": "#/components/schemas/InvoicesCancel422"
          }
        ]
      },
      "InlineResponse4223": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Error422"
          },
          {
            "$ref": "#/components/schemas/InvoicesPayments422"
          }
        ]
      },
      "INVALIDSTRINGMAXLENGTH50": {
        "title": "INVALID_STRING_MAX_LENGTH",
        "properties": {
          "issue": {
            "type": "string",
            "enum": [
              "INVALID_STRING_MAX_LENGTH"
            ]
          },
          "description": {
            "type": "string",
            "enum": [
              "Tax id length should be less than 100 characters."
            ]
          }
        }
      },
      "InlineResponse4226": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Error422"
          },
          {
            "$ref": "#/components/schemas/TemplatesCreate422"
          }
        ]
      },
      "INVALIDSTRINGMAXLENGTH51": {
        "title": "INVALID_STRING_MAX_LENGTH",
        "properties": {
          "issue": {
            "type": "string",
            "enum": [
              "INVALID_STRING_MAX_LENGTH"
            ]
          },
          "description": {
            "type": "string",
            "enum": [
              "Invoice number length should be less than 25 characters."
            ]
          }
        }
      },
      "InlineResponse4227": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Error422"
          },
          {
            "$ref": "#/components/schemas/TemplatesUpdate422"
          }
        ]
      },
      "INVALIDSTRINGMAXLENGTH52": {
        "title": "INVALID_STRING_MAX_LENGTH",
        "properties": {
          "issue": {
            "type": "string",
            "enum": [
              "INVALID_STRING_MAX_LENGTH"
            ]
          },
          "description": {
            "type": "string",
            "enum": [
              "Item description length should be less than 1000 characters."
            ]
          }
        }
      }
    },
    "responses": {
      "default": {
        "description": "The default response.",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ErrorDefault"
            }
          }
        }
      }
    },
    "parameters": {
      "page": {
        "name": "page",
        "in": "query",
        "description": "The page number to be retrieved, for the list of templates. So, a combination of `page=1` and `page_size=20` returns the first 20 templates. A combination of `page=2` and `page_size=20` returns the next 20 templates",
        "required": false,
        "style": "form",
        "explode": true,
        "schema": {
          "maximum": 1000,
          "minimum": 1,
          "type": "integer",
          "default": 1
        }
      },
      "page_size": {
        "name": "page_size",
        "in": "query",
        "description": "The maximum number of templates to return in the response",
        "required": false,
        "style": "form",
        "explode": true,
        "schema": {
          "maximum": 100,
          "minimum": 1,
          "type": "integer",
          "default": 20
        },
        "x-ballerina-name-ignore": "pageSize"
      },
      "total_required": {
        "name": "total_required",
        "in": "query",
        "description": "Indicates whether the to show <code>total_pages</code> and <code>total_items</code> in the response",
        "required": false,
        "style": "form",
        "explode": true,
        "schema": {
          "type": "boolean",
          "default": false
        },
        "x-ballerina-name-ignore": "totalRequired"
      },
      "fields": {
        "name": "fields",
        "in": "query",
        "description": "The fields to return in the response. Value is `all` or `none`. To return only the template name, ID, and default attributes, specify `none`",
        "required": false,
        "style": "form",
        "explode": true,
        "schema": {
          "pattern": "(?i)^(all|none)$",
          "type": "string",
          "default": "all"
        }
      },
      "invoice_id": {
        "name": "invoiceId",
        "in": "path",
        "description": "The ID of the draft invoice to delete",
        "required": true,
        "style": "simple",
        "explode": false,
        "schema": {
          "type": "string"
        }
      },
      "transaction_id": {
        "name": "transactionId",
        "in": "path",
        "description": "The ID of the external refund transaction to delete",
        "required": true,
        "style": "simple",
        "explode": false,
        "schema": {
          "type": "string"
        }
      },
      "send_to_recipient": {
        "name": "send_to_recipient",
        "in": "query",
        "description": "Indicates whether to send the invoice update notification to the recipient",
        "required": false,
        "style": "form",
        "explode": true,
        "schema": {
          "type": "boolean",
          "default": true
        },
        "x-ballerina-name-ignore": "sendToRecipient"
      },
      "send_to_invoicer": {
        "name": "send_to_invoicer",
        "in": "query",
        "description": "Indicates whether to send the invoice update notification to the merchant",
        "required": false,
        "style": "form",
        "explode": true,
        "schema": {
          "type": "boolean",
          "default": true
        },
        "x-ballerina-name-ignore": "sendToInvoicer"
      },
      "template_id": {
        "name": "templateId",
        "in": "path",
        "description": "The ID of the template to delete",
        "required": true,
        "style": "simple",
        "explode": false,
        "schema": {
          "type": "string"
        }
      },
      "content-type": {
        "in": "header",
        "name": "Content-Type",
        "required": true,
        "schema": {
          "type": "string",
          "enum": [
            "application/json"
          ],
          "default": "application/json"
        },
        "description": "The content type should be set to `application/json`."
      },
      "prefer": {
        "in": "header",
        "name": "Prefer",
        "required": false,
        "schema": {
          "type": "string",
          "default": "return=representation"
        },
        "description": "Specifies the preferred response format."
      }
    },
    "examples": {
      "invoice": {
        "value": {
          "detail": {
            "invoice_number": "#123",
            "reference": "deal-ref",
            "invoice_date": "2018-11-12",
            "currency_code": "USD",
            "note": "Thank you for your business.",
            "term": "No refunds after 30 days.",
            "memo": "This is a long contract",
            "payment_term": {
              "term_type": "NET_10",
              "due_date": "2018-11-22"
            }
          },
          "invoicer": {
            "name": {
              "given_name": "David",
              "surname": "Larusso"
            },
            "address": {
              "address_line_1": "1234 First Street",
              "address_line_2": "337673 Hillside Court",
              "admin_area_2": "Anytown",
              "admin_area_1": "CA",
              "postal_code": "98765",
              "country_code": "US"
            },
            "email_address": "merchant@example.com",
            "phones": [
              {
                "country_code": "001",
                "national_number": "4085551234",
                "phone_type": "MOBILE"
              }
            ],
            "website": "www.test.com",
            "tax_id": "ABcNkWSfb5ICTt73nD3QON1fnnpgNKBy- Jb5SeuGj185MNNw6g",
            "logo_url": "https://example.com/logo.PNG",
            "additional_notes": "2-4"
          },
          "primary_recipients": [
            {
              "billing_info": {
                "name": {
                  "given_name": "Stephanie",
                  "surname": "Meyers"
                },
                "address": {
                  "address_line_1": "1234 Main Street",
                  "admin_area_2": "Anytown",
                  "admin_area_1": "CA",
                  "postal_code": "98765",
                  "country_code": "US"
                },
                "email_address": "bill-me@example.com",
                "phones": [
                  {
                    "country_code": "001",
                    "national_number": "4884551234",
                    "phone_type": "HOME"
                  }
                ],
                "additional_info_value": "add-info"
              },
              "shipping_info": {
                "name": {
                  "given_name": "Stephanie",
                  "surname": "Meyers"
                },
                "address": {
                  "address_line_1": "1234 Main Street",
                  "admin_area_2": "Anytown",
                  "admin_area_1": "CA",
                  "postal_code": "98765",
                  "country_code": "US"
                }
              }
            }
          ],
          "items": [
            {
              "name": "Yoga Mat",
              "description": "Elastic mat to practice yoga.",
              "quantity": "1",
              "unit_amount": {
                "currency_code": "USD",
                "value": "50.00"
              },
              "tax": {
                "name": "Sales Tax",
                "percent": "7.25"
              },
              "discount": {
                "percent": "5"
              },
              "unit_of_measure": "QUANTITY"
            },
            {
              "name": "Yoga t-shirt",
              "quantity": "1",
              "unit_amount": {
                "currency_code": "USD",
                "value": "10.00"
              },
              "tax": {
                "name": "Sales Tax",
                "percent": "7.25"
              },
              "discount": {
                "amount": {
                  "currency_code": "USD",
                  "value": "5.00"
                }
              },
              "unit_of_measure": "QUANTITY"
            }
          ],
          "configuration": {
            "partial_payment": {
              "allow_partial_payment": true,
              "minimum_amount_due": {
                "currency_code": "USD",
                "value": "20.00"
              }
            },
            "allow_tip": true,
            "tax_calculated_after_discount": true,
            "tax_inclusive": false,
            "template_id": "TEMP-19V05281TU309413B"
          },
          "amount": {
            "breakdown": {
              "custom": {
                "label": "Packing Charges",
                "amount": {
                  "currency_code": "USD",
                  "value": "10.00"
                }
              },
              "shipping": {
                "amount": {
                  "currency_code": "USD",
                  "value": "10.00"
                },
                "tax": {
                  "name": "Sales Tax",
                  "percent": "7.25"
                }
              },
              "discount": {
                "invoice_discount": {
                  "percent": "5"
                }
              }
            }
          }
        }
      },
      "invoice_draft": {
        "value": {
          "id": "INV2-C82X-JNN9-Y6S5-CNXW",
          "status": "DRAFT",
          "detail": {
            "invoice_number": "#123",
            "reference": "deal-refernce-update",
            "invoice_date": "2018-11-12",
            "currency_code": "USD",
            "note": "Thank you for your business.",
            "term": "No refunds after 30 days.",
            "memo": "This is a long contract",
            "payment_term": {
              "term_type": "NET_10",
              "due_date": "2018-11-22"
            }
          },
          "invoicer": {
            "name": {
              "given_name": "David",
              "surname": "Larusso"
            },
            "address": {
              "address_line_1": "1234 First Street",
              "address_line_2": "337673 Hillside Court",
              "admin_area_2": "Anytown",
              "admin_area_1": "CA",
              "postal_code": "98765",
              "country_code": "US"
            },
            "email_address": "merchant@example.com",
            "phones": [
              {
                "country_code": "001",
                "national_number": "4085551234",
                "phone_type": "MOBILE"
              }
            ],
            "website": "www.test.com",
            "tax_id": "ABcNkWSfb5ICTt73nD3QON1fnnpgNKBy-Jb5SeuGj185MNNw6g",
            "logo_url": "https://example.com/logo.PNG",
            "additional_notes": "2-4"
          },
          "primary_recipients": [
            {
              "billing_info": {
                "name": {
                  "given_name": "Stephanie",
                  "surname": "Meyers"
                },
                "address": {
                  "address_line_1": "1234 Main Street",
                  "admin_area_2": "Anytown",
                  "admin_area_1": "CA",
                  "postal_code": "98765",
                  "country_code": "US"
                },
                "email_address": "bill-me@example.com",
                "phones": [
                  {
                    "country_code": "001",
                    "national_number": "4884551234",
                    "phone_type": "HOME"
                  }
                ],
                "additional_info_value": "add-info"
              },
              "shipping_info": {
                "name": {
                  "given_name": "Stephanie",
                  "surname": "Meyers"
                },
                "address": {
                  "address_line_1": "1234 Main Street",
                  "admin_area_2": "Anytown",
                  "admin_area_1": "CA",
                  "postal_code": "98765",
                  "country_code": "US"
                }
              }
            }
          ],
          "items": [
            {
              "name": "Yoga Mat",
              "description": "Elastic mat to practice yoga.",
              "quantity": "1",
              "unit_amount": {
                "currency_code": "USD",
                "value": "50.00"
              },
              "tax": {
                "name": "Sales Tax",
                "percent": "7.25",
                "amount": {
                  "currency_code": "USD",
                  "value": "3.27"
                }
              },
              "discount": {
                "percent": "5",
                "amount": {
                  "currency_code": "USD",
                  "value": "2.5"
                }
              },
              "unit_of_measure": "QUANTITY"
            },
            {
              "name": "Yoga t-shirt",
              "quantity": "1",
              "unit_amount": {
                "currency_code": "USD",
                "value": "10.00"
              },
              "tax": {
                "name": "Sales Tax",
                "percent": "7.25",
                "amount": {
                  "currency_code": "USD",
                  "value": "0.34"
                }
              },
              "discount": {
                "amount": {
                  "currency_code": "USD",
                  "value": "5.00"
                }
              },
              "unit_of_measure": "QUANTITY"
            }
          ],
          "configuration": {
            "partial_payment": {
              "allow_partial_payment": true,
              "minimum_amount_due": {
                "currency_code": "USD",
                "value": "20.00"
              }
            },
            "allow_tip": true,
            "tax_calculated_after_discount": true,
            "tax_inclusive": false,
            "template_id": "TEMP-19V05281TU309413B"
          },
          "amount": {
            "currency_code": "USD",
            "value": "74.21",
            "breakdown": {
              "item_total": {
                "currency_code": "USD",
                "value": "60.00"
              },
              "custom": {
                "label": "Packing Charges",
                "amount": {
                  "currency_code": "USD",
                  "value": "10.00"
                }
              },
              "shipping": {
                "amount": {
                  "currency_code": "USD",
                  "value": "10.00"
                },
                "tax": {
                  "name": "Sales Tax",
                  "percent": "7.25",
                  "amount": {
                    "currency_code": "USD",
                    "value": "0.73"
                  }
                }
              },
              "discount": {
                "item_discount": {
                  "currency_code": "USD",
                  "value": "-7.50"
                },
                "invoice_discount": {
                  "percent": "5",
                  "amount": {
                    "currency_code": "USD",
                    "value": "-2.63"
                  }
                }
              },
              "tax_total": {
                "currency_code": "USD",
                "value": "4.34"
              }
            }
          }
        }
      },
      "payment_detail": {
        "value": {
          "method": "BANK_TRANSFER",
          "payment_date": "2018-05-01",
          "amount": {
            "currency_code": "USD",
            "value": "10.00"
          }
        }
      },
      "refund_detail": {
        "value": {
          "method": "BANK_TRANSFER",
          "refund_date": "2018-05-21",
          "amount": {
            "currency_code": "USD",
            "value": "5.00"
          }
        }
      },
      "qr_config": {
        "value": {
          "width": 400,
          "height": 400
        }
      },
      "search_data": {
        "value": {
          "total_amount_range": {
            "lower_amount": {
              "currency_code": "USD",
              "value": "50.00"
            },
            "upper_amount": {
              "currency_code": "USD",
              "value": "50.00"
            }
          },
          "invoice_date_range": {
            "start": "2018-06-01",
            "end": "2018-06-21"
          }
        }
      },
      "template": {
        "value": {
          "default_template": true,
          "template_info": {
            "configuration": {
              "tax_calculated_after_discount": true,
              "tax_inclusive": false,
              "allow_tip": true,
              "partial_payment": {
                "allow_partial_payment": true,
                "minimum_amount_due": {
                  "currency_code": "USD",
                  "value": "20.00"
                }
              }
            },
            "detail": {
              "reference": "deal-ref",
              "note": "Thank you for your business.",
              "currency_code": "USD",
              "terms_and_conditions": "No refunds after 30 days.",
              "memo": "This is a long contract",
              "attachments": [
                {
                  "id": "Screen Shot 2018-11-23 at 16.45.01.png",
                  "reference_url": "https://api-m.paypal.com/invoice/payerView/attachments/RkG9ggQbd4Mwm1tYdcF6uuixfFTFq32bBdbE1VbtQLdKSoS2ZOYpfjw9gPp7eTrZmVaFaDWzixHXm-OXWHbmigHigHzURDxJs8IIKqcqP8jawnBEZcraEAPVMULxf5iTyOSpAUc2ugW0PWdwDbM6mg-guFAUyj3Z98H7htWNjQY95jb9heOlcSXUe.sbDUR9smAszzzJoA1NXT6rEEegwQ&version=1&sig=JNODB0xEayW8txMQm6ZsIwDnd4eh3hd6ijiRLi4ipHE"
                }
              ],
              "payment_term": {
                "term_type": "NET_10"
              }
            },
            "invoicer": {
              "name": {
                "given_name": "David",
                "surname": "Larusso"
              },
              "address": {
                "address_line_1": "1234 First Street",
                "address_line_2": "337673 Hillside Court",
                "admin_area_2": "Anytown",
                "admin_area_1": "CA",
                "postal_code": "98765",
                "country_code": "US"
              },
              "email_address": "merchant@example.com",
              "phones": [
                {
                  "country_code": "001",
                  "national_number": "4085551234",
                  "phone_type": "MOBILE"
                }
              ],
              "website": "www.test.com",
              "tax_id": "ABcNkWSfb5ICTt73nD3QON1fnnpgNKBy-Jb5SeuGj185MNNw6g",
              "logo_url": "https://example.com/logo.PNG",
              "additional_notes": "2-4"
            },
            "primary_recipients": [
              {
                "billing_info": {
                  "name": {
                    "given_name": "Stephanie",
                    "surname": "Meyers"
                  },
                  "address": {
                    "address_line_1": "1234 Main Street",
                    "admin_area_2": "Anytown",
                    "admin_area_1": "CA",
                    "postal_code": "98765",
                    "country_code": "US"
                  },
                  "email_address": "bill-me@example.com",
                  "phones": [
                    {
                      "country_code": "001",
                      "national_number": "4884551234",
                      "phone_type": "MOBILE"
                    }
                  ],
                  "additional_info": "add-info"
                },
                "shipping_info": {
                  "name": {
                    "given_name": "Stephanie",
                    "surname": "Meyers"
                  },
                  "address": {
                    "address_line_1": "1234 Main Street",
                    "admin_area_2": "Anytown",
                    "admin_area_1": "CA",
                    "postal_code": "98765",
                    "country_code": "US"
                  }
                }
              }
            ],
            "additional_recipients": [
              "inform-me@example.com"
            ],
            "items": [
              {
                "name": "Yoga Mat",
                "description": "new watch",
                "quantity": "1",
                "unit_amount": {
                  "currency_code": "USD",
                  "value": "50.00"
                },
                "tax": {
                  "name": "Sales Tax",
                  "percent": "7.25"
                },
                "discount": {
                  "percent": "5"
                },
                "unit_of_measure": "QUANTITY"
              },
              {
                "name": "Yoga T Shirt",
                "quantity": "1",
                "unit_amount": {
                  "currency_code": "USD",
                  "value": "10.00"
                },
                "tax": {
                  "name": "Sales Tax",
                  "percent": "7.25"
                },
                "discount": {
                  "amount": {
                    "currency_code": "USD",
                    "value": "5.00"
                  }
                },
                "unit_of_measure": "QUANTITY"
              }
            ],
            "amount": {
              "currency_code": "USD",
              "value": "74.21",
              "breakdown": {
                "custom": {
                  "label": "Packing Charges",
                  "amount": {
                    "currency_code": "USD",
                    "value": "10.00"
                  }
                },
                "shipping": {
                  "amount": {
                    "currency_code": "USD",
                    "value": "10.00"
                  },
                  "tax": {
                    "name": "Sales Tax",
                    "percent": "7.25"
                  }
                },
                "discount": {
                  "invoice_discount": {
                    "percent": "5"
                  }
                }
              }
            }
          },
          "settings": {
            "template_item_settings": [
              {
                "field_name": "ITEMS_DATE",
                "display_preference": {
                  "hidden": true
                }
              },
              {
                "field_name": "ITEMS_DISCOUNT",
                "display_preference": {
                  "hidden": false
                }
              },
              {
                "field_name": "ITEMS_TAX",
                "display_preference": {
                  "hidden": false
                }
              },
              {
                "field_name": "ITEMS_DESCRIPTION",
                "display_preference": {
                  "hidden": false
                }
              },
              {
                "field_name": "ITEMS_QUANTITY",
                "display_preference": {
                  "hidden": true
                }
              }
            ],
            "template_subtotal_settings": [
              {
                "field_name": "CUSTOM",
                "display_preference": {
                  "hidden": false
                }
              },
              {
                "field_name": "DISCOUNT",
                "display_preference": {
                  "hidden": false
                }
              },
              {
                "field_name": "SHIPPING",
                "display_preference": {
                  "hidden": false
                }
              }
            ]
          },
          "unit_of_measure": "QUANTITY",
          "standard_template": false
        }
      },
      "template_1": {
        "value": {
          "default_template": true,
          "template_info": {
            "configuration": {
              "tax_calculated_after_discount": true,
              "tax_inclusive": false,
              "allow_tip": true,
              "partial_payment": {
                "allow_partial_payment": true,
                "minimum_amount_due": {
                  "currency_code": "USD",
                  "value": "20.00"
                }
              }
            },
            "detail": {
              "reference": "deal-ref",
              "note": "Thank you for your business.",
              "currency_code": "USD",
              "terms_and_conditions": "No refunds after 30 days.",
              "memo": "This is a long contract",
              "attachments": [
                {
                  "id": "Screen Shot 2018-11-23 at 16.45.01.png",
                  "reference_url": "https://api-m.paypal.com/invoice/payerView/attachments/RkG9ggQbd4Mwm1tYdcF6uuixfFTFq32bBdbE1VbtQLdKSoS2ZOYpfjw9gPp7eTrZmVaFaDWzixHXm-OXWHbmigHigHzURDxJs8IIKqcqP8jawnBEZcraEAPVMULxf5iTyOSpAUc2ugW0PWdwDbM6mg-guFAUyj3Z98H7htWNjQY95jb9heOlcSXUe.sbDUR9smAszzzJoA1NXT6rEEegwQ&version=1&sig=JNODB0xEayW8txMQm6ZsIwDnd4eh3hd6ijiRLi4ipHE"
                }
              ],
              "payment_term": {
                "term_type": "NET_10"
              }
            },
            "invoicer": {
              "name": {
                "given_name": "David",
                "surname": "Larusso"
              },
              "address": {
                "address_line_1": "1234 First Street",
                "address_line_2": "337673 Hillside Court",
                "admin_area_2": "Anytown",
                "admin_area_1": "CA",
                "postal_code": "98765",
                "country_code": "US"
              },
              "email_address": "merchant@example.com",
              "phones": [
                {
                  "country_code": "001",
                  "national_number": "4085551234",
                  "phone_type": "MOBILE"
                }
              ],
              "website": "www.test.com",
              "tax_id": "ABcNkWSfb5ICTt73nD3QON1fnnpgNKBy-Jb5SeuGj185MNNw6g",
              "logo_url": "https://example.com/logo.PNG",
              "additional_notes": "2-4"
            },
            "primary_recipients": [
              {
                "billing_info": {
                  "name": {
                    "given_name": "Stephanie",
                    "surname": "Meyers"
                  },
                  "address": {
                    "address_line_1": "1234 Main Street",
                    "admin_area_2": "Anytown",
                    "admin_area_1": "CA",
                    "postal_code": "98765",
                    "country_code": "US"
                  },
                  "email_address": "bill-me@example.com",
                  "phones": [
                    {
                      "country_code": "001",
                      "national_number": "4884551234",
                      "phone_type": "MOBILE"
                    }
                  ],
                  "additional_info": "add-info"
                },
                "shipping_info": {
                  "name": {
                    "given_name": "Stephanie",
                    "surname": "Meyers"
                  },
                  "address": {
                    "address_line_1": "1234 Main Street",
                    "admin_area_2": "Anytown",
                    "admin_area_1": "CA",
                    "postal_code": "98765",
                    "country_code": "US"
                  }
                }
              }
            ],
            "additional_recipients": [
              "inform-me@example.com"
            ],
            "items": [
              {
                "name": "Yoga Mat",
                "description": "new watch",
                "quantity": "1",
                "unit_amount": {
                  "currency_code": "USD",
                  "value": "50.00"
                },
                "tax": {
                  "name": "Sales Tax",
                  "percent": "7.25"
                },
                "discount": {
                  "percent": "5"
                },
                "unit_of_measure": "QUANTITY"
              },
              {
                "name": "Yoga T Shirt",
                "quantity": "1",
                "unit_amount": {
                  "currency_code": "USD",
                  "value": "10.00"
                },
                "tax": {
                  "name": "Sales Tax",
                  "percent": "7.25"
                },
                "discount": {
                  "amount": {
                    "currency_code": "USD",
                    "value": "5.00"
                  }
                },
                "unit_of_measure": "QUANTITY"
              }
            ],
            "amount": {
              "currency_code": "USD",
              "value": "74.21",
              "breakdown": {
                "custom": {
                  "label": "Packing Charges",
                  "amount": {
                    "currency_code": "USD",
                    "value": "10.00"
                  }
                },
                "shipping": {
                  "amount": {
                    "currency_code": "USD",
                    "value": "10.00"
                  },
                  "tax": {
                    "name": "Sales Tax",
                    "percent": "7.25"
                  }
                },
                "discount": {
                  "invoice_discount": {
                    "percent": "5"
                  }
                }
              }
            }
          },
          "settings": {
            "template_item_settings": [
              {
                "field_name": "ITEMS_DATE",
                "display_preference": {
                  "hidden": true
                }
              },
              {
                "field_name": "ITEMS_DISCOUNT",
                "display_preference": {
                  "hidden": false
                }
              },
              {
                "field_name": "ITEMS_TAX",
                "display_preference": {
                  "hidden": false
                }
              },
              {
                "field_name": "ITEMS_DESCRIPTION",
                "display_preference": {
                  "hidden": false
                }
              },
              {
                "field_name": "ITEMS_QUANTITY",
                "display_preference": {
                  "hidden": true
                }
              }
            ],
            "template_subtotal_settings": [
              {
                "field_name": "CUSTOM",
                "display_preference": {
                  "hidden": false
                }
              },
              {
                "field_name": "DISCOUNT",
                "display_preference": {
                  "hidden": false
                }
              },
              {
                "field_name": "SHIPPING",
                "display_preference": {
                  "hidden": false
                }
              }
            ]
          },
          "unit_of_measure": "QUANTITY",
          "standard_template": false
        }
      },
      "notification_invoice": {
        "value": {
          "send_to_invoicer": true
        }
      },
      "notification_invoice_cancel": {
        "value": {
          "subject": "Invoice Cancelled",
          "note": "Cancelling the invoice",
          "send_to_invoicer": true,
          "send_to_recipient": true,
          "additional_recipients": [
            "user@example.com"
          ]
        }
      },
      "notification_reminder": {
        "value": {
          "subject": "Reminder: Payment due for the invoice #ABC-123",
          "note": "Please pay before the due date to avoid incurring late payment charges which will be adjusted in the next bill generated.",
          "send_to_invoicer": true,
          "additional_recipients": [
            "customer-a@example.com",
            "customer@example.com"
          ]
        }
      }
    },
    "securitySchemes": {
      "Oauth2": {
        "type": "oauth2",
        "description": "Oauth 2.0 authentication",
        "flows": {
          "clientCredentials": {
            "tokenUrl": "https://api-m.sandbox.paypal.com/v1/oauth2/token",
            "scopes": {
              "https://uri.paypal.com/services/invoicing/invoices/read": "For Reading the invoice details.",
              "https://uri.paypal.com/services/invoicing/invoices/readwrite": "For managing (Create, Update, Delete) invoice.",
              "https://uri.paypal.com/services/invoicing/internal": "Manage invoice resource internal clients."
            }
          }
        }
      }
    }
  }
}
